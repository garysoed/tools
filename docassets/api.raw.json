{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.9.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "gs-tools!",
  "docComment": "/**\n * Provides various utilities for development that are too small to be in their own package.\n *\n * @packageDocumentation\n */\n",
  "name": "gs-tools",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "gs-tools!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$asArray:function(1)",
          "docComment": "/**\n * Converts the {@link Iterable} to an {@link Array}.\n *\n * @typeParam T - Type of items in the array.\n *\n * @returns `Operator` to convert `Iterable` to arrays.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asArray<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$asArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$asMap:function(1)",
          "docComment": "/**\n * Converts the {@link Iterable} to a {@link Map}.\n *\n * @typeParam K - Type of keys in the map.\n *\n * @typeParam V - Type of values in the map.\n *\n * @returns `Operator` to convert `Iterable`s to maps.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asMap<K, V>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<[K, V]>, "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$asMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$asOrderedMap:function(1)",
          "docComment": "/**\n * Converts the {@link Iterable} to an {@link OrderedMap}.\n *\n * @typeParam K - Type of keys in the map.\n *\n * @typeParam V - Type of values in the map.\n *\n * @returns `Operator` to convert `Iterable`s to `OrderedMap`s.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asOrderedMap<K, V>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<[K, V]>, "
            },
            {
              "kind": "Reference",
              "text": "OrderedMap",
              "canonicalReference": "gs-tools!OrderedMap:class"
            },
            {
              "kind": "Content",
              "text": "<K, V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$asOrderedMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$asRecord:function(1)",
          "docComment": "/**\n * Converts the {@link Iterable} to a record.\n *\n * @typeParam V - Type of values in the record.\n *\n * @returns `Operator` to convert `Iterable`s to maps.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asRecord<V>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<[string, V]>, "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$asRecord"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$asSet:function(1)",
          "docComment": "/**\n * Converts the {@link Iterable} to a {@link Set}.\n *\n * @typeParam T - Type of items in the set.\n *\n * @returns `Operator` to convert `Iterable`s to sets.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asSet<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "Set",
              "canonicalReference": "!Set:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$asSet"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$diff:function(1)",
          "docComment": "/**\n * Returns elements that are in the original {@link Iterable} but not in the given set.\n *\n * @param other - Set to compare to.\n *\n * @typeParam T - Type of item.\n *\n * @returns Operator that returns elements that are in the original `Iterable` but not in the given set.\n *\n * @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function diff<T>(other: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "other",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$diff"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$every:function(1)",
          "docComment": "/**\n * Returns `true` iff all the elements in the collection is `true`.\n *\n * @remarks\n *\n * The given collection needs to have a finite size.\n *\n * @returns Operator that returns `true` iff all the elements in the it6erable is `true`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function every(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FiniteIterable",
              "canonicalReference": "gs-tools!FiniteIterable:type"
            },
            {
              "kind": "Content",
              "text": "<boolean>, boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "$every"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$filter:function(1)",
          "docComment": "/**\n * Filters out items that do not fulfill the given predicate.\n *\n * @remarks\n *\n * The given predicate can use type guard to set the value of the returned {@link Iterable}.\n *\n * @param predicate - Function that takes in an item and returns true iff the item should be in the resulting `Iterable`.\n *\n * @typeParam T1 - Type of item in the `Iterable`.\n *\n * @typeParam T2 - Type of `Iterable` whose items pass the given predicate, if the predicate has a type guard.\n *\n * @returns `Operator` that filters out items that do not fulfill the given predicate.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filter<T1, T2 extends "
            },
            {
              "kind": "Content",
              "text": "T1"
            },
            {
              "kind": "Content",
              "text": ">(predicate: "
            },
            {
              "kind": "Content",
              "text": "(item: T1) => "
            },
            {
              "kind": "Reference",
              "text": "item",
              "canonicalReference": "gs-tools!~item"
            },
            {
              "kind": "Content",
              "text": " is T2"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T1>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T2>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "predicate",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$filter"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$filter:function(2)",
          "docComment": "/**\n * @param predicate - Function that takes in an item and returns true iff the item should be in the resulting `Iterable`.\n *\n * @typeParam T - Type of item in the `Iterable`.\n *\n * @returns `Operator` that filters out items that do not fulfill the given predicate.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filter<T>(predicate: "
            },
            {
              "kind": "Content",
              "text": "(item: T) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "predicate",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$filter"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$filterByType:function(1)",
          "docComment": "/**\n * Returns elements in the {@link Iterable} of the given {@link Type}.\n *\n * @param type - Expected type of the item.\n *\n * @typeParam T - Expected type of item.\n *\n * @returns Operator that returns elements of the given `Type`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterByType<T>(type: "
            },
            {
              "kind": "Reference",
              "text": "Type",
              "canonicalReference": "gs-types!Type:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$filterByType"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$filterDefined:function(1)",
          "docComment": "/**\n * Filters out any `undefined`.\n *\n * @typeParam T - Type of item in the input `Iterable` that is not `undefined`.\n *\n * @returns Operator that filters out any `undefined`.\n *\n * @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterDefined<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, undefined>>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$filterDefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$filterNonNull:function(1)",
          "docComment": "/**\n * Filters out any `null`s from the {@link Iterable}.\n *\n * @typeParam T - Type of item in the input `Iterable` that is not `null`.\n *\n * @returns Operator that filters out any `null`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterNonNull<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, null>>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$filterNonNull"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$first:function(1)",
          "docComment": "/**\n * Returns the first element in the {@link Iterable}, or null if there are none.\n *\n * @typeParam T - Type of item in the given `Iterable`.\n *\n * @returns `Operator` that returns the first element in the iterable, or null if there are none.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function first<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, T | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$first"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$flat:function(1)",
          "docComment": "/**\n * Flattens the {@link Iterable} of `Iterable`s.\n *\n * @remarks\n *\n * If the input value is an `Iterable` of {@link Map}s, the resulting `Iterable` will contain `[key, value]` pairs of the maps.\n *\n * @typeParam T - Type of item in the given `Iterable`.\n *\n * @returns `Operator` that flattens the `Iterable` of `Iterable`s..  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flat<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FiniteIterable",
              "canonicalReference": "gs-tools!~FiniteIterable:type"
            },
            {
              "kind": "Content",
              "text": "<T>>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$flat"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$flat:function(2)",
          "docComment": "/**\n * @typeParam K - Type of the keys in the input map.\n *\n * @typeParam V - Type of the values in the input map.\n *\n * @returns `Operator` that flattens an `Iterable` of Maps to `Iterable` of `[key, value]` tuples in the maps.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flat<K, V>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<[K, V]>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$flat"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$intersect:function(1)",
          "docComment": "/**\n * Returns {@link Set} of items that are in the input `Set` and in the given `Set`.\n *\n * @param otherSet - Other set to compare to.\n *\n * @typeParam T - Type of items in the `Set`.\n *\n * @returns `Operator` that returns `Set` of items in the input and the given `Set`s.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function intersect<T>(otherSet: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "otherSet",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$intersect"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$join:function(1)",
          "docComment": "/**\n * Joins the items in the given array together as one string.\n *\n * @param separator - Separator to join the items together.\n *\n * @returns `Operator` that joins all items in the given array as one string using the given separator.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function join(separator: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<readonly string[], string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "separator",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "$join"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$map:function(1)",
          "docComment": "/**\n * Maps each item in the given {@link Iterable} to another.\n *\n * @param mapFn - The mapping function\n *\n * @typeParam F - Original type of the items.\n *\n * @typeParam T - Type of the mapped items.\n *\n * @returns `Operator` that maps each item in the original `Iterable`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function map<F, T>(mapFn: "
            },
            {
              "kind": "Content",
              "text": "(from: F) => T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<F>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mapFn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$map"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(1)",
          "docComment": "/**\n * Chains together a sequence of `Operator`s to operate on the given `source`.\n *\n * @remarks\n *\n * Use this to chain together the `Operator`s found in this module.\n *\n * @param source - The starting object.\n *\n * @typeParam F - Type of the source.\n *\n * @returns The object returned after a sequence of `Operators` applied on the `source`.  @thModule collect.operators\n *\n * @example\n *\n * Increments all items in the array and return it as a `Set`.\n * ```\n * $pipe(\n *   [1, 2, 3, 1],\n *   $map(v => v + 1),\n *   $asSet(),\n * );  // Set([2, 3, 4])\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(10)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3, T4, T5, T6, T7, T8>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": ", fn4: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T3, T4>"
            },
            {
              "kind": "Content",
              "text": ", fn5: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T4, T5>"
            },
            {
              "kind": "Content",
              "text": ", fn6: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T5, T6>"
            },
            {
              "kind": "Content",
              "text": ", fn7: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T6, T7>"
            },
            {
              "kind": "Content",
              "text": ", fn8: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T7, T8>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T8"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 30,
            "endIndex": 31
          },
          "releaseTag": "Public",
          "overloadIndex": 10,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "fn4",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              }
            },
            {
              "parameterName": "fn5",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              }
            },
            {
              "parameterName": "fn6",
              "parameterTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 23
              }
            },
            {
              "parameterName": "fn7",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 26
              }
            },
            {
              "parameterName": "fn8",
              "parameterTypeTokenRange": {
                "startIndex": 27,
                "endIndex": 29
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T4",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T5",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T6",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T7",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T8",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T0"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(3)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T1"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 3,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(4)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T2"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 4,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(5)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T3"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 5,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(6)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3, T4>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": ", fn4: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T3, T4>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T4"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 6,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "fn4",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T4",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(7)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3, T4, T5>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": ", fn4: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T3, T4>"
            },
            {
              "kind": "Content",
              "text": ", fn5: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T4, T5>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T5"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 21,
            "endIndex": 22
          },
          "releaseTag": "Public",
          "overloadIndex": 7,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "fn4",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              }
            },
            {
              "parameterName": "fn5",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T4",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T5",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(8)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3, T4, T5, T6>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": ", fn4: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T3, T4>"
            },
            {
              "kind": "Content",
              "text": ", fn5: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T4, T5>"
            },
            {
              "kind": "Content",
              "text": ", fn6: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T5, T6>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T6"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 24,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 8,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "fn4",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              }
            },
            {
              "parameterName": "fn5",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              }
            },
            {
              "parameterName": "fn6",
              "parameterTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 23
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T4",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T5",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T6",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$pipe:function(9)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function $pipe<F, T0, T1, T2, T3, T4, T5, T6, T7>(source: "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ", fn0: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<F, T0>"
            },
            {
              "kind": "Content",
              "text": ", fn1: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T0, T1>"
            },
            {
              "kind": "Content",
              "text": ", fn2: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T1, T2>"
            },
            {
              "kind": "Content",
              "text": ", fn3: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T2, T3>"
            },
            {
              "kind": "Content",
              "text": ", fn4: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T3, T4>"
            },
            {
              "kind": "Content",
              "text": ", fn5: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T4, T5>"
            },
            {
              "kind": "Content",
              "text": ", fn6: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T5, T6>"
            },
            {
              "kind": "Content",
              "text": ", fn7: "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<T6, T7>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T7"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 27,
            "endIndex": 28
          },
          "releaseTag": "Public",
          "overloadIndex": 9,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fn0",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "fn1",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            },
            {
              "parameterName": "fn2",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            },
            {
              "parameterName": "fn3",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "parameterName": "fn4",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              }
            },
            {
              "parameterName": "fn5",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              }
            },
            {
              "parameterName": "fn6",
              "parameterTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 23
              }
            },
            {
              "parameterName": "fn7",
              "parameterTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 26
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T3",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T4",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T5",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T6",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T7",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$pipe"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$recordToMap:function(1)",
          "docComment": "/**\n * Converts the input record to {@link Map}.\n *\n * @returns `Operator` that converts the given `Record` to a `Map`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function recordToMap(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "$recordToMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$reverse:function(1)",
          "docComment": "/**\n * Reverses the items in the given {@link Array}.\n *\n * @typeParam T - Type of items in the `Array`.\n *\n * @returns `Operator` that reverses the items in the `Array`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function reverse<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<readonly T[], readonly T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$reverse"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$size:function(1)",
          "docComment": "/**\n * Returns the size of the input collection.\n *\n * @remarks\n *\n * The input collection needs to have a known size, so it cannot be an {@link Iterable}.\n *\n * @returns `Operator` that returns the number of items in the given collection.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function size(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HasSize",
              "canonicalReference": "gs-tools!HasSize:type"
            },
            {
              "kind": "Content",
              "text": ", number>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "$size"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$some:function(1)",
          "docComment": "/**\n * Returns `true` iff at least one element in the given {@link Iterable} is `true`.\n *\n * @returns `Operator` that returns `true` iff at least one element in the given `Iterable` is `true`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function some(): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FiniteIterable",
              "canonicalReference": "gs-tools!FiniteIterable:type"
            },
            {
              "kind": "Content",
              "text": "<boolean>, boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "$some"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$sort:function(1)",
          "docComment": "/**\n * Sorts the given `Array`.\n *\n * @param ordering - Object that determines how to sort the items.\n *\n * @typeParam T - Type of the items to sort.\n *\n * @returns `Ordering` that sorts the given `Array`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function sort<T>(ordering: "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<readonly T[], readonly T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ordering",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$sort"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$take:function(1)",
          "docComment": "/**\n * Returns {@link Array} with the first `count` elements from the {@link Iterable}.\n *\n * @param count - Number of items to take.\n *\n * @typeParam T - Type of items.\n *\n * @returns `Operator` that returns the first `count` elements from the `Iterable`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function take<T>(count: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, readonly T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "count",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$take"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!$zip:function(1)",
          "docComment": "/**\n * Combines two {@link Iterable}s together to form an `Iterable` of pairs made of each element in the original `Iterable`s paired together in order.\n *\n * @remarks\n *\n * If the `Iterable`s have different lengths, the returned `Iterable` will have the length of the shorted one. The rest of the items will be ignored.\n *\n * @param other - `Iterable` to zip with.\n *\n * @typeParam T1 - Type of the items in the first `Iterable`.\n *\n * @typeParam T2 - Type of the items in the second `Iterable`.\n *\n * @returns `Operator` that zips the input `Iterable` with the given `Iterable`.  @thModule collect.operators\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function zip<T1, T2>(other: "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T2>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Operator",
              "canonicalReference": "gs-tools!Operator:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T1>, "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<[T1, T2]>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "other",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "$zip"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!AbsolutePath:class",
          "docComment": "/**\n * Path that is an absolute path.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AbsolutePath extends "
            },
            {
              "kind": "Reference",
              "text": "Path",
              "canonicalReference": "gs-tools!Path:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AbsolutePath",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!AbsolutePath#toString:member(1)",
              "docComment": "/**\n * String representation of the path.\n *\n * @returns String representation of the absolute path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toString"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!absolutePath:function(1)",
          "docComment": "/**\n * Creates an {@link AbsolutePath} by parsing the given string.\n *\n * @param pathString - String to parse as `AbsolutePath`.\n *\n * @returns The parsed string as `AbsolutePath`.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function absolutePath(pathString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pathString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "absolutePath"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!AbsolutePathParser:class",
          "docComment": "/**\n * Parses the string to {@link AbsolutePath}.\n *\n * @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AbsolutePathParser implements "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ", string> "
            }
          ],
          "releaseTag": "Public",
          "name": "AbsolutePathParser",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!AbsolutePathParser#convertBackward:member(1)",
              "docComment": "/**\n * Parses the input as an absolute path.\n *\n * @param value - Value to be parsed.\n *\n * @returns Result of parsing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "convertBackward(value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "nabu!Result:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AbsolutePath",
                  "canonicalReference": "gs-tools!AbsolutePath:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "convertBackward"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!AbsolutePathParser#convertForward:member(1)",
              "docComment": "/**\n * Converts the path to string.\n *\n * @param input - Absolute path to be converted to string.\n *\n * @returns Result of stringifying the path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "convertForward(input: "
                },
                {
                  "kind": "Reference",
                  "text": "AbsolutePath",
                  "canonicalReference": "gs-tools!AbsolutePath:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Result",
                  "canonicalReference": "nabu!Result:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "convertForward"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!absolutePathParser:function(1)",
          "docComment": "/**\n * Creates parser for {@link AbsolutePath}.\n *\n * @returns Converter for `AbsolutePath`.  @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function absolutePathParser(): "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ", string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "absolutePathParser"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!aleaSeed:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function aleaSeed(seed: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RandomSeed",
              "canonicalReference": "gs-tools!RandomSeed:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "seed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "aleaSeed"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!ArrayDiff:type",
          "docComment": "/**\n * Differences between arrays.\n *\n * @typeParam T - Type of the array element.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ArrayDiff<T> = "
            },
            {
              "kind": "Reference",
              "text": "ArrayInit",
              "canonicalReference": "gs-tools!ArrayInit:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "ArrayInsert",
              "canonicalReference": "gs-tools!ArrayInsert:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "ArrayDelete",
              "canonicalReference": "gs-tools!ArrayDelete:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "ArraySet",
              "canonicalReference": "gs-tools!ArraySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ArrayDiff",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!arrayFrom:function(1)",
          "docComment": "/**\n * Converts from various objects to {@link Array}.\n *\n * @remarks\n *\n * This supports various DOM objects.\n *\n * @param attrs - Map of attributes.\n *\n * @returns `Array` of objects in the given input.  @thModule collect.structures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrayFrom(attrs: "
            },
            {
              "kind": "Reference",
              "text": "NamedNodeMap",
              "canonicalReference": "!NamedNodeMap:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "Attr",
              "canonicalReference": "!Attr:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "attrs",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "arrayFrom"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!arrayFrom:function(2)",
          "docComment": "/**\n * @param nodeListOf - List of `Node`s.\n *\n * @typeParam N - Type of {@link Node}s in the list.\n *\n * @returns `Array` of `Node`s in the list.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrayFrom<N extends "
            },
            {
              "kind": "Reference",
              "text": "Node",
              "canonicalReference": "!Node:interface"
            },
            {
              "kind": "Content",
              "text": ">(nodeListOf: "
            },
            {
              "kind": "Reference",
              "text": "NodeListOf",
              "canonicalReference": "!NodeListOf:interface"
            },
            {
              "kind": "Content",
              "text": "<N>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly N[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "nodeListOf",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrayFrom"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!arrayFrom:function(3)",
          "docComment": "/**\n * @param filelist - List of {@link File}\n *\n * @returns `Array` of `File`s in the list.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrayFrom(filelist: "
            },
            {
              "kind": "Reference",
              "text": "FileList",
              "canonicalReference": "!FileList:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 3,
          "parameters": [
            {
              "parameterName": "filelist",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "arrayFrom"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!arrayFrom:function(4)",
          "docComment": "/**\n * @param nodeListOf - Collection of {@link Element}s/\n *\n * @returns `Array` of `Element`s in the collection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrayFrom(nodeListOf: "
            },
            {
              "kind": "Reference",
              "text": "HTMLCollection",
              "canonicalReference": "!HTMLCollection:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 4,
          "parameters": [
            {
              "parameterName": "nodeListOf",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "arrayFrom"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!asMultiCell:function(1)",
          "docComment": "/**\n * Asserts and casts Google Sheet's `Cell` object as a multicell.\n *\n * @param cell - Google Sheet's `Cell` object.\n *\n * @returns The cell object as a `MultiCell`.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asMultiCell(cell: "
            },
            {
              "kind": "Reference",
              "text": "Cell",
              "canonicalReference": "gs-tools!Cell:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MultiCell",
              "canonicalReference": "gs-tools!MultiCell:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cell",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "asMultiCell"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!assertByType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assertByType<T>(type: "
            },
            {
              "kind": "Reference",
              "text": "Type",
              "canonicalReference": "gs-types!Type:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "assertByType"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!assertDefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assertDefined<T>(msg?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, undefined>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "msg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "assertDefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!assertNonNull:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assertNonNull<T>(msg?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, null>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "msg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "assertNonNull"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!assertUnreachable:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assertUnreachable(_: "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "_",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "assertUnreachable"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!asSingleCell:function(1)",
          "docComment": "/**\n * Asserts and casts Google Sheet's `Cell` object as a single cell.\n *\n * @param cell - Google Sheet's `Cell` object.\n *\n * @returns The cell object as a `SingleCell`.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asSingleCell(cell: "
            },
            {
              "kind": "Reference",
              "text": "Cell",
              "canonicalReference": "gs-tools!Cell:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SingleCell",
              "canonicalReference": "gs-tools!SingleCell:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cell",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "asSingleCell"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!asTuple:function(1)",
          "docComment": "/**\n * Declares the given array as a tuple.\n *\n * @param v - Tuple to typecast.\n *\n * @returns The input tuple.  @thModule typescript\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asTuple(tuple: "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tuple",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "asTuple"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!asTuple:function(2)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asTuple<T0>(tuple: "
            },
            {
              "kind": "Content",
              "text": "[T0]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[T0]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "tuple",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "asTuple"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!asTuple:function(3)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function asTuple<T0, T1>(tuple: "
            },
            {
              "kind": "Content",
              "text": "[T0, T1]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[T0, T1]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 3,
          "parameters": [
            {
              "parameterName": "tuple",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T0",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "asTuple"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!BaseIdGenerator:class",
          "docComment": "/**\n * Base class of all ID generators.\n *\n * @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseIdGenerator "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseIdGenerator",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!BaseIdGenerator#generate:member(1)",
              "docComment": "/**\n * Generates a new ID that is different from any of the given existing IDs.\n *\n * @param existingIds - IDs that already exist.\n *\n * @returns Newly generated ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generate(existingIds: "
                },
                {
                  "kind": "Reference",
                  "text": "Iterable",
                  "canonicalReference": "!Iterable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "existingIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "generate"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!BaseIdGenerator#newId:member(1)",
              "docComment": "/**\n * Generates a new ID.\n *\n * @returns The newly generated ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected abstract newId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "newId"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!BaseIdGenerator#resolveConflict:member(1)",
              "docComment": "/**\n * Attempts to resolve a conflict for the given ID.\n *\n * @remarks\n *\n * This is a best effort method to come up with another ID based on the knowledge that the given ID already conflicts.\n *\n * @param id - The conflicting ID.\n *\n * @returns Best effort new ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected abstract resolveConflict(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "resolveConflict"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!byType:function(1)",
          "docComment": "/**\n * Order the items by the types.\n *\n * @param types - Array of types to order the items with.\n *\n * @returns `Ordering` that sorts a collection by types, in the same order as the given types array.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function byType(types: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Type",
              "canonicalReference": "gs-types!Type:class"
            },
            {
              "kind": "Content",
              "text": "<any>>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "types",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "name": "byType"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!cache:function(1)",
          "docComment": "/**\n * Caches the given method.\n *\n * @remarks\n *\n * This only calls the implementation once. Subsequent calls to the function will return the first return value without calling the implementation.\n *\n * This only support getters and methods with 0 arguments.\n *\n * @thDecorator accessor method  @thModule data\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function cache(): "
            },
            {
              "kind": "Reference",
              "text": "MethodDecorator",
              "canonicalReference": "!MethodDecorator:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "cache"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!Cases:class",
          "docComment": "/**\n * Utility class to convert between different capitalization styles.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Cases "
            }
          ],
          "releaseTag": "Public",
          "name": "Cases",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!Cases:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Cases` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(words: "
                },
                {
                  "kind": "Content",
                  "text": "readonly string[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "words",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Cases.of:member(1)",
              "docComment": "/**\n * Starting point of the case conversion.\n *\n * @return Cases object to chain the conversion.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static of(input: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Cases",
                  "canonicalReference": "gs-tools!Cases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "of"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Cases#toCamelCase:member(1)",
              "docComment": "/**\n * Converts to camelCase.\n *\n * @return The camel case version of the string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toCamelCase(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toCamelCase"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Cases#toLowerCase:member(1)",
              "docComment": "/**\n * Converts to lower-case.\n *\n * @return The lower case version of the string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toLowerCase(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toLowerCase"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Cases#toPascalCase:member(1)",
              "docComment": "/**\n * Converts to PascalCase.\n *\n * @return The pascal case version of the string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toPascalCase(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toPascalCase"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Cases#toUpperCase:member(1)",
              "docComment": "/**\n * Converts to UPPER_CASE.\n *\n * @return The upper case version of the string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toUpperCase(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toUpperCase"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!Cell:type",
          "docComment": "/**\n * A cell in the table.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Cell = "
            },
            {
              "kind": "Reference",
              "text": "SingleCell",
              "canonicalReference": "gs-tools!SingleCell:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MultiCell",
              "canonicalReference": "gs-tools!MultiCell:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Cell",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!CellData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CellData "
            }
          ],
          "releaseTag": "Public",
          "name": "CellData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!CellData#effectiveValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly effectiveValue?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtendedValue",
                  "canonicalReference": "gs-tools!ExtendedValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "effectiveValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!ClassAnnotation:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClassAnnotation<D> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ClassAnnotation",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!ClassAnnotation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ClassAnnotation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ClassAnnotation#getAllValues:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllValues(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAllValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ClassAnnotation#getAttachedValues:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getAttachedValues"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!ClassAnnotator:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ClassAnnotator<D, A extends "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ClassAnnotator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!ClassAnnotator:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ClassAnnotator` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(annotator: "
                },
                {
                  "kind": "Reference",
                  "text": "Annotator",
                  "canonicalReference": "gs-tools!~Annotator:type"
                },
                {
                  "kind": "Content",
                  "text": "<A, D>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "annotator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!ClassAnnotator#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get data(): "
                },
                {
                  "kind": "Reference",
                  "text": "ClassAnnotation",
                  "canonicalReference": "gs-tools!ClassAnnotation:class"
                },
                {
                  "kind": "Content",
                  "text": "<D>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!ClassAnnotator#decorator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get decorator(): "
                },
                {
                  "kind": "Content",
                  "text": "(...args: A) => "
                },
                {
                  "kind": "Reference",
                  "text": "ClassDecorator",
                  "canonicalReference": "!ClassDecorator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "decorator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!Color:class",
          "docComment": "/**\n * Base class of all colors.\n *\n * @remarks\n *\n * This class provides some simple implementations of some color properties.\n *\n * @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Color "
            }
          ],
          "releaseTag": "Public",
          "name": "Color",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#blue:member",
              "docComment": "/**\n * Blue component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get blue(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#chroma:member",
              "docComment": "/**\n * Chroma of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get chroma(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "chroma",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#green:member",
              "docComment": "/**\n * Green component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get green(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "green",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#hue:member",
              "docComment": "/**\n * Hue component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get hue(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#lightness:member",
              "docComment": "/**\n * Lightness component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get lightness(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lightness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#luminance:member",
              "docComment": "/**\n * Luminance of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get luminance(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "luminance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#red:member",
              "docComment": "/**\n * Red component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get red(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "red",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Color#saturation:member",
              "docComment": "/**\n * Saturation component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get saturation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "saturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!CompareResult:type",
          "docComment": "/**\n * Result of comparison.\n *\n * @remarks\n *\n * If `-1`, the first item is smaller than the second. If `1`, the first item is larger than the second. Otherwise, no comparison is done. The two items are either equal or uncomparable.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CompareResult = "
            },
            {
              "kind": "Content",
              "text": "-1 | 0 | 1"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CompareResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!compound:function(1)",
          "docComment": "/**\n * Returns function to sort items by the given array of `Ordering`s.\n *\n * @remarks\n *\n * The given array of `Ordering`s are used for tie breaking.\n *\n * @param orderings - Orderings to check.\n *\n * @typeParam T - Type of items to compare.\n *\n * @returns Ordering object that uses the given array of `Ordering`s to break ties.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function compound<T>(orderings: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "orderings",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "compound"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!convertBackward:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function convertBackward<F, T>(converter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<T, F>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<F, T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "converter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "convertBackward"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!convertForward:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function convertForward<F, T>(converter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<F, T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<F, T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "converter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "convertForward"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!countableIterable:function(1)",
          "docComment": "/**\n * Creates an infinite {@link Iterable} containing countable numbers (0, 1, 2, ...).\n *\n * @returns Infinite `Iterable` containing countable numbers.  @thModule collect.structures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function countableIterable(): "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "countableIterable"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!createSheetsTable:function(1)",
          "docComment": "/**\n * Extracts a section of Google Sheets table as a `SheetsTable`.\n *\n * @remarks\n *\n * A `SheetsTable` is a simple representation of Google Sheets table. This table is a 2D array of `SheetsCell`. Cells that are merged have the same instance in different slots in the array.\n *\n * @param raw - Raw data from Google Sheet.\n *\n * @param fromRow - Start row index.\n *\n * @param toRow - End row index, exclusive.\n *\n * @param fromColumn - Start column index.\n *\n * @param toColumn - End column index, exclusive.\n *\n * @returns Simpler representation of Google Sheets table.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSheetsTable(raw: "
            },
            {
              "kind": "Reference",
              "text": "RawSheet",
              "canonicalReference": "gs-tools!RawSheet:interface"
            },
            {
              "kind": "Content",
              "text": ", fromRow: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", toRow: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", fromColumn: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", toColumn: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SheetsTable",
              "canonicalReference": "gs-tools!SheetsTable:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "raw",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "fromRow",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "toRow",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "fromColumn",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "toColumn",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "createSheetsTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!debug:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function debug<T>(...keys: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MonoTypeOperatorFunction",
              "canonicalReference": "rxjs!MonoTypeOperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "keys",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "debug"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!defineTable:function(1)",
          "docComment": "/**\n * Given a `SheetsTable`, return a data table.\n *\n * @remarks\n *\n * A `SheetsTable` may contain merged row and column headers. This function tries to determine rows and columns using the merged headers.\n *\n * This means that the intersection of a merged row and a merged column will produce a cell that contains a sub table.\n *\n * This function is useful for interpreting sheets data easily, as it allows you to search by known rows and columns and pay attention to merged headings.\n *\n * @param sheetsTable - Simple representation of Google Sheets table.\n *\n * @returns The interpreted table.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defineTable(sheetsTable: "
            },
            {
              "kind": "Reference",
              "text": "SheetsTable",
              "canonicalReference": "gs-tools!SheetsTable:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Table",
              "canonicalReference": "gs-tools!Table:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "sheetsTable",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "defineTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!diff:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function diff<T>(oldIterable: "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ", newIterable: "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DiffResult",
              "canonicalReference": "gs-tools!~DiffResult:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "oldIterable",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "newIterable",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "diff"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!diffArray:function(1)",
          "docComment": "/**\n * Emits diffs of the input arrays.\n *\n * @remarks\n *\n * The first emission is always compared to empty array. Note that if the input array emissions change a lot, there can be more output diffs than the input arrays.\n *\n * @typeParam T - Type of the array element.\n *\n * @returns Operator that takes in arrays and emits diffs between subsequent array emissions.\n *\n * @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function diffArray<T>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<readonly T[], "
            },
            {
              "kind": "Reference",
              "text": "ArrayDiff",
              "canonicalReference": "gs-tools!ArrayDiff:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "diffArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!diffMap:function(1)",
          "docComment": "/**\n * Emits diffs of the input maps.\n *\n * @remarks\n *\n * The first emission is always compared to empty map. Note that if the input map emissions change a lot, there can be more output diffs than the input maps.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.\n *\n * @returns Operator that takes in maps and emits diffs between subsequent map emissions.\n *\n * @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function diffMap<K, V>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>, "
            },
            {
              "kind": "Reference",
              "text": "MapDiff",
              "canonicalReference": "gs-tools!MapDiff:type"
            },
            {
              "kind": "Content",
              "text": "<K, V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "diffMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!diffSet:function(1)",
          "docComment": "/**\n * Emits diffs of the input sets.\n *\n * @remarks\n *\n * The first emission is always compared to empty set. Note that if the input set emissions change a lot, there can be more output diffs than the input sets.\n *\n * @typeParam T - Type of the set element.\n *\n * @returns Operator that takes in sets and emits diffs between subsequent set emissions.\n *\n * @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function diffSet<T>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "SetDiff",
              "canonicalReference": "gs-tools!SetDiff:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "diffSet"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!EditableStorage:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EditableStorage<T> extends "
            },
            {
              "kind": "Reference",
              "text": "ReadableStorage",
              "canonicalReference": "gs-tools!ReadableStorage:interface"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "EditableStorage",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#delete:member(1)",
              "docComment": "/**\n * Deletes the object corresponding to the given ID.\n *\n * @param id - ID of the object to delete.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "delete"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#deleteAt:member(1)",
              "docComment": "/**\n * Deletes the object at the given index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "deleteAt"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#generateId:member(1)",
              "docComment": "/**\n * Reserves a new ID in the storage.\n *\n * @returns Observable that emits new IDs. The IDs emitted are guaranteed to be unique at the time of emission.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateId(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "generateId"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#insertAt:member(1)",
              "docComment": "/**\n * Inserts the object at the given index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertAt"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#update:member(1)",
              "docComment": "/**\n * Updates the given object. If it doesn't exist, add the object.\n *\n * @param id - ID of the object to update.\n *\n * @param instance - Object to update.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "update"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!EditableStorage#updateAt:member(1)",
              "docComment": "/**\n * Sets the object at the given index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "updateAt"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!ExtendedValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExtendedValue "
            }
          ],
          "releaseTag": "Public",
          "name": "ExtendedValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!ExtendedValue#boolValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly boolValue?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "boolValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!ExtendedValue#numberValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly numberValue?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "numberValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!ExtendedValue#stringValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly stringValue?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "stringValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!FakeSeed:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FakeSeed implements "
            },
            {
              "kind": "Reference",
              "text": "RandomSeed",
              "canonicalReference": "gs-tools!RandomSeed:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FakeSeed",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!FakeSeed:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `FakeSeed` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(values?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "values",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!FakeSeed#next:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Content",
                  "text": "readonly [number, "
                },
                {
                  "kind": "Reference",
                  "text": "RandomSeed",
                  "canonicalReference": "gs-tools!RandomSeed:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "next"
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!FakeSeed#values:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "values",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!filterByType:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterByType<F, T extends "
            },
            {
              "kind": "Content",
              "text": "F"
            },
            {
              "kind": "Content",
              "text": ">(type: "
            },
            {
              "kind": "Reference",
              "text": "Type",
              "canonicalReference": "gs-types!Type:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<F>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "filterByType"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!filterDefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterDefined<T>(): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, undefined>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "filterDefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!filterNonNull:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function filterNonNull<T>(): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<T, null>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "filterNonNull"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!FiniteIterable:type",
          "docComment": "/**\n * {@link Iterable}s that are finite but only has one type param.\n *\n * @typeParam T - Type of items in the `Iterable`.  @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FiniteIterable<T> = "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | readonly T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FiniteIterable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!following:function(1)",
          "docComment": "/**\n * Returns function to sort items by equality with the given array of items.\n *\n * @remarks\n *\n * The returned function will try to sort items in the same order as the given array of items. Items that are not in the given array will be treated as equal value.\n *\n * @param specs - Array of items to compare.\n *\n * @typeParam T - Type of items to compare.\n *\n * @returns Function that tries to sort the items following the order of the given array of items.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function following<T>(specs: "
            },
            {
              "kind": "Content",
              "text": "readonly T[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "specs",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "following"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!fromCssColor:function(1)",
          "docComment": "/**\n * Creates a color object from the given CSS color string.\n *\n * @remarks\n *\n * This ignores the alpha attribute and does not work with named colors.\n *\n * @param cssColor - CSS color string.\n *\n * @returns The Color object created from the CSS color string, or null if the string is invalid.  @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fromCssColor(cssColor: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cssColor",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "fromCssColor"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!fromLowerCaseString:function(1)",
          "docComment": "/**\n * Converts enum name (as lower case string) to the corresponding enum value.\n *\n * @param stringValue - The string value to convert to enum value.\n *\n * @param enumSet - The set of enum values.  @return The enum value corresponding to the enum name.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fromLowerCaseString<E>(stringValue: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", enumSet: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "E"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "stringValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "enumSet",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "fromLowerCaseString"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!fromNumberString:function(1)",
          "docComment": "/**\n * Converts enum number (as string) to the corresponding enum value.\n *\n * @param stringValue - The number to convert to enum value.\n *\n * @param enumSet - The set of enum values.  @return The enum value corresponding to the enum number.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fromNumberString<E>(stringValue: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", enumSet: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "E"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "stringValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "enumSet",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "fromNumberString"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!fromSeed:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fromSeed(seed: "
            },
            {
              "kind": "Reference",
              "text": "RandomSeed",
              "canonicalReference": "gs-tools!RandomSeed:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "seed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "fromSeed"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getAllValues:function(1)",
          "docComment": "/**\n * Returns all values of the given enum.\n *\n * @param enumSet - Enum whose values should be returned.  @return Array of enum values.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getAllValues<E>(enumSet: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly E[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "enumSet",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getAllValues"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getContrast:function(1)",
          "docComment": "/**\n * Computes the contrast ratio.\n *\n * @param foreground - Foreground color.\n *\n * @param background - Background color.\n *\n * @returns The contrast ratio.  @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getContrast(foreground: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ", background: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "foreground",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "background",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getContrast"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getDirPath:function(1)",
          "docComment": "/**\n * Returns the directory part of the path.\n *\n * @remarks\n *\n * If this is given `AbsolutePath`, this returns `AbsolutePath`. If this is given `RelativePath`, this returns `RelativePath`.\n *\n * @param path - Path to return the directory's path of.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDirPath(path: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getDirPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getDirPath:function(2)",
          "docComment": "/**\n * @param path - Path to return the directory's path of.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDirPath(path: "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getDirPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getDistance:function(1)",
          "docComment": "/**\n * Computes the Euclidean distance between the two colors.\n *\n * @remarks\n *\n * This uses the RGB components to compute the distance. The resulting distance is the square of the distance.\n *\n * @param color1 - First color\n *\n * @param color2 - Second color\n *\n * @returns The Euclidean distance between the two given colors.  @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDistance(color1: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ", color2: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "color1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "color2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getDistance"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getFilenameParts:function(1)",
          "docComment": "/**\n * Splits the given filename into its name and extension.\n *\n * @param filename - File name to split into parts.\n *\n * @returns Object with the file's extension and name.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFilenameParts(filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    extension: string;\n    name: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getFilenameParts"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getItemName:function(1)",
          "docComment": "/**\n * Returns the item part of the path.\n *\n * @param path - Path to return the item name.\n *\n * @returns The item part, or null if the path is a directory\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getItemName(path: "
            },
            {
              "kind": "Reference",
              "text": "Path",
              "canonicalReference": "gs-tools!Path:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getItemName"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getRelativePath:function(1)",
          "docComment": "/**\n * Returns the relative path from the `srcPath` to the `destPath`.\n *\n * @param srcPath - The starting path.\n *\n * @param destPath - The destination path.\n *\n * @returns Relative path from the source path to the destination path.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRelativePath(srcPath: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ", destPath: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "srcPath",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "destPath",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getRelativePath"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!getSubPathsToRoot:function(1)",
          "docComment": "/**\n * Navigate to the root path and returns subpaths to the root path.\n *\n * @remarks\n *\n * For example, if path is '/a/b/c', this would return ['/a/b/c', '/a/b', '/a', '/'].\n *\n * @param path - Path to return the subpaths to.\n *\n * @returns Subpaths to the root from the given path.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSubPathsToRoot(path: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getSubPathsToRoot"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!GridData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridData "
            }
          ],
          "releaseTag": "Public",
          "name": "GridData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!GridData#rowData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rowData?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "RowData",
                  "canonicalReference": "gs-tools!RowData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rowData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!GridRange:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridRange "
            }
          ],
          "releaseTag": "Public",
          "name": "GridRange",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!GridRange#endColumnIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly endColumnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endColumnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!GridRange#endRowIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly endRowIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endRowIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!GridRange#startColumnIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly startColumnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startColumnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!GridRange#startRowIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly startRowIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startRowIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!HasSize:type",
          "docComment": "/**\n * Collections with a known size.\n *\n * @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HasSize = "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<any, any> | readonly any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HasSize",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!HslColor:class",
          "docComment": "/**\n * `Color` based on its hue, saturation, and lightness.\n *\n * @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HslColor extends "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "HslColor",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!HslColor:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HslColor` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(hueRaw: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", \n    saturation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", \n    lightness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hueRaw",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "saturation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "lightness",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#blue:member",
              "docComment": "/**\n * Blue component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get blue(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#chroma:member",
              "docComment": "/**\n * Chroma of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get chroma(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "chroma",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#green:member",
              "docComment": "/**\n * Green component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get green(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "green",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#hue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly hue: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#lightness:member",
              "docComment": "/**\n * Lightness component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lightness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lightness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#red:member",
              "docComment": "/**\n * Red component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get red(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "red",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!HslColor#saturation:member",
              "docComment": "/**\n * Saturation component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly saturation: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "saturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!InMemoryStorage:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InMemoryStorage<T> implements "
            },
            {
              "kind": "Reference",
              "text": "EditableStorage",
              "canonicalReference": "gs-tools!EditableStorage:interface"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "InMemoryStorage",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!InMemoryStorage:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `InMemoryStorage` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(idGenerator: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseIdGenerator",
                  "canonicalReference": "gs-tools!BaseIdGenerator:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "idGenerator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#delete:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#deleteAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "deleteAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#findIndex:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findIndex(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<number | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "findIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#generateId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateId(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "generateId"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#has:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#insertAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insertAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "insertAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#listIds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayDiff",
                  "canonicalReference": "gs-tools!ArrayDiff:type"
                },
                {
                  "kind": "Content",
                  "text": "<string>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "listIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#read:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<T | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#update:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "update"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!InMemoryStorage#updateAt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instance: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "instance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "updateAt"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!integerConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function integerConverter(round?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IntegerConverter",
              "canonicalReference": "gs-tools!~IntegerConverter:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "round",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "integerConverter"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!isOneOf:function(1)",
          "docComment": "/**\n * Orders items matching the given list at the start of the list.\n *\n * @typeParam T - Type of item to order.\n *\n * @returns Ordering that sorts item earlier if it matches one of the given items.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isOneOf<T>(checkedSet: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "checkedSet",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "isOneOf"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!join:function(1)",
          "docComment": "/**\n * Joins the given paths together in order.\n *\n * @remarks\n *\n * If the root path is absolute, the resulting path will also be absolute. Similarly, if the root path is relative, the resulting path will also be relative.\n *\n * @param root - The root path.\n *\n * @param paths - Paths to join together.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function join(root: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ", ...paths: "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "root",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "paths",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            }
          ],
          "name": "join"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!join:function(2)",
          "docComment": "/**\n * @param root - The root path.\n *\n * @param paths - Paths to join together.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function join(root: "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ", ...paths: "
            },
            {
              "kind": "Content",
              "text": "readonly "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "root",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "paths",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            }
          ],
          "name": "join"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!Library:interface",
          "docComment": "/**\n * Represents Google API library.\n *\n * @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Library "
            }
          ],
          "releaseTag": "Public",
          "name": "Library",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Library#discoveryDoc:member",
              "docComment": "/**\n * Discovery doc string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly discoveryDoc: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "discoveryDoc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Library#scopes:member",
              "docComment": "/**\n * Scopes to be used for accessing the library.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly scopes: "
                },
                {
                  "kind": "Content",
                  "text": "readonly string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "scopes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!listConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function listConverter<T>(itemConverter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<T, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<T[], "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "itemConverter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "listConverter"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!LocalStorage:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LocalStorage<T> extends "
            },
            {
              "kind": "Reference",
              "text": "WebStorage",
              "canonicalReference": "gs-tools!WebStorage:class"
            },
            {
              "kind": "Content",
              "text": "<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "LocalStorage",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!LocalStorage:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `LocalStorage` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(window: "
                },
                {
                  "kind": "Reference",
                  "text": "Window",
                  "canonicalReference": "!Window:interface"
                },
                {
                  "kind": "Content",
                  "text": ", prefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", converter: "
                },
                {
                  "kind": "Reference",
                  "text": "Converter",
                  "canonicalReference": "nabu!Converter:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T, "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "nabu!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "window",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "prefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "converter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!LocalStorage.of:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static of<T>(window: "
                },
                {
                  "kind": "Reference",
                  "text": "Window",
                  "canonicalReference": "!Window:interface"
                },
                {
                  "kind": "Content",
                  "text": ", prefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", converter: "
                },
                {
                  "kind": "Reference",
                  "text": "Converter",
                  "canonicalReference": "nabu!Converter:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T, "
                },
                {
                  "kind": "Reference",
                  "text": "Serializable",
                  "canonicalReference": "nabu!Serializable:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalStorage",
                  "canonicalReference": "gs-tools!LocalStorage:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "window",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "prefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "converter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "of"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!mapArrayDiff:function(1)",
          "docComment": "/**\n * Maps the value of the array diffs.\n *\n * @param mapFn - Map function to apply.\n *\n * @typeParam F - Original type of the array.\n *\n * @typeParam T - Destination type of the array.\n *\n * @returns Operator that maps the values of any input array diff using the given mapping function.\n *\n * @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mapArrayDiff<F, T>(mapFn: "
            },
            {
              "kind": "Content",
              "text": "(from: F) => T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArrayDiff",
              "canonicalReference": "gs-tools!ArrayDiff:type"
            },
            {
              "kind": "Content",
              "text": "<F>, "
            },
            {
              "kind": "Reference",
              "text": "ArrayDiff",
              "canonicalReference": "gs-tools!ArrayDiff:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mapFn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "mapArrayDiff"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!mapConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mapConverter<K, V>(keyConverter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<K, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", valueConverter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<V, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 17
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "keyConverter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "parameterName": "valueConverter",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "mapConverter"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!MapDelete:interface",
          "docComment": "/**\n * Deletes the entry from the map.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MapDelete<K> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MapDelete",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapDelete#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapDelete#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'delete'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!MapDiff:type",
          "docComment": "/**\n * Differences between maps.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MapDiff<K, V> = "
            },
            {
              "kind": "Reference",
              "text": "MapInit",
              "canonicalReference": "gs-tools!MapInit:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V> | "
            },
            {
              "kind": "Reference",
              "text": "MapDelete",
              "canonicalReference": "gs-tools!MapDelete:interface"
            },
            {
              "kind": "Content",
              "text": "<K> | "
            },
            {
              "kind": "Reference",
              "text": "MapSet",
              "canonicalReference": "gs-tools!MapSet:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MapDiff",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!MapInit:interface",
          "docComment": "/**\n * Initializes the map by setting it to the given map.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MapInit<K, V> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MapInit",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapInit#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'init'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapInit#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!mapNonNull:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mapNonNull<A, B>(fn: "
            },
            {
              "kind": "Content",
              "text": "(from: A) => B"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<A | null>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<B | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "B",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "mapNonNull"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!MapSet:interface",
          "docComment": "/**\n * Sets the entry of the map.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MapSet<K, V> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MapSet",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapSet#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapSet#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'set'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MapSet#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!matches:function(1)",
          "docComment": "/**\n * Returns function that orders items at the front iif the predicate returns true for them.\n *\n * @param predicate - Predicate function to determine the ordering of items.\n *\n * @typeParam T - Type of item to check.\n *\n * @returns Function that orders items at the front iif the predicate returns true for them.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matches<T>(predicate: "
            },
            {
              "kind": "Content",
              "text": "(input: T) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "predicate",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "matches"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!Merge:interface",
          "docComment": "/**\n * Merge data in Google Sheets.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Merge "
            }
          ],
          "releaseTag": "Public",
          "name": "Merge",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Merge#endColumnIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly endColumnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endColumnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Merge#endRowIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly endRowIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endRowIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Merge#startColumnIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly startColumnIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startColumnIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!Merge#startRowIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly startRowIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "startRowIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!mix:function(1)",
          "docComment": "/**\n * Mixes the two colors together.\n *\n * @remarks\n *\n * This performs additive blending between the two colors.\n *\n * @param color1 - The first color to mix.\n *\n * @param color2 - The second color to mix.\n *\n * @param amount - Ratio of first color to mix.\n *\n * @returns Mixture of the two given colors: color1 * amount + color2 * (1 - amount).  @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mix(color1: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ", color2: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ", amount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "color1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "color2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "amount",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "mix"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!MultiCell:interface",
          "docComment": "/**\n * Cell that contains multiple cells in the sheet.\n *\n * @remarks\n *\n * If the cell has a merged row header, or a merged column header, the cell will be a multicell.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MultiCell "
            }
          ],
          "releaseTag": "Public",
          "name": "MultiCell",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MultiCell#isSingle:member",
              "docComment": "/**\n * The cell has multiple subcells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isSingle: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSingle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!MultiCell#value:member",
              "docComment": "/**\n * Subtable in the cell.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "SheetsTable",
                  "canonicalReference": "gs-tools!SheetsTable:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!natural:function(1)",
          "docComment": "/**\n * Natural ordering that pays attention to numerical values in the string.\n *\n * @returns Function that orders the items in a natural order.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function natural(): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "natural"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!neonize:function(1)",
          "docComment": "/**\n * Neonize a color.\n *\n * @remarks\n *\n * This picks color among RGBCMY that is the closest to the given color, then does additive blend with that color.\n *\n * @param color - Color to neonize.\n *\n * @param ratio - How close to the neon color the resulting color should be.\n *\n * @returns The neonized color.  @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function neonize(color: "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ", ratio: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "color",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "ratio",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "neonize"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!normal:function(1)",
          "docComment": "/**\n * Ordering by comparators `<` and `>`.\n *\n * @remarks\n *\n * For numbers, this is the natural ordering of the number. For strings, this is the alphabetical ordering. For booleans, this ordering treats `false` as smaller.\n *\n * @typeParam T - Type of item to compare.\n *\n * @returns Ordering function using `<` and `>`.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function normal<T extends "
            },
            {
              "kind": "Content",
              "text": "string | number | boolean"
            },
            {
              "kind": "Content",
              "text": ">(): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "normal"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!normalize:function(1)",
          "docComment": "/**\n * Normalizes the given path.\n *\n * @remarks\n *\n * This removes all instances where the part is empty, and removes any unnecessary `..` and `.`.\n *\n * @param path - Absolute path to normalize.\n *\n * @returns The normalized absolute path.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function normalize(path: "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AbsolutePath",
              "canonicalReference": "gs-tools!AbsolutePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "normalize"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!normalize:function(2)",
          "docComment": "/**\n * @param path - Absolute path to normalize.\n *\n * @returns The normalized absolute path.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function normalize(path: "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "normalize"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!objectConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objectConverter<T extends "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ">(spec: "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<T[K], "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ObjectConverter",
              "canonicalReference": "gs-tools!ObjectConverter:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "spec",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectConverter"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!Operator:type",
          "docComment": "/**\n * Maps the input object to an output object.\n *\n * @param from - Original object to map.\n *\n * @typeParam F - Original type of the object.\n *\n * @typeParam T - Mapped type of the object.\n *\n * @returns The mapped object.  @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Operator<F, T> = "
            },
            {
              "kind": "Content",
              "text": "(from: F) => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Operator",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!OrderedMap:class",
          "docComment": "/**\n * Map whose entries are ordered.\n *\n * @typeParam K - Type of the keys in the `Map`.\n *\n * @typeParam V - Type of the values in the `Map`.  @thModule collect.structures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OrderedMap<K, V> implements "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Sortable",
              "canonicalReference": "gs-tools!Sortable:interface"
            },
            {
              "kind": "Content",
              "text": "<[K, V]> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "OrderedMap",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#[Symbol.iterator]:member(1)",
              "docComment": "/**\n * Iterates through the entries in the map.\n *\n * @returns {@link Iterator} for the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!OrderedMap#[Symbol.toStringTag]:member",
              "docComment": "/**\n * Default tag when stringifying `OrderedMap`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.toStringTag",
                  "canonicalReference": "!SymbolConstructor#toStringTag"
                },
                {
                  "kind": "Content",
                  "text": "] = \"OrderedMap\";"
                }
              ],
              "releaseTag": "Public",
              "name": "[Symbol.toStringTag]",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!OrderedMap:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OrderedMap` class\n *\n * @param source - Array of entry pairs of the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(source?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<readonly [K, V]>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#clear:member(1)",
              "docComment": "/**\n * Removes all entries in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#delete:member(1)",
              "docComment": "/**\n * Removes the entry corresponding to the given key.\n *\n * @param key - Key of the entry to delete.\n *\n * @returns True iff deletion was successful.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#entries:member(1)",
              "docComment": "/**\n * Returns all entries in the map.\n *\n * @returns {@link Iterator} that iterates all entries in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#forEach:member(1)",
              "docComment": "/**\n * Calls the given function for every entry in the map.\n *\n * @remarks\n *\n * The given function takes the `value` of the entry, `key` of the `entry` and a reference to the map object.\n *\n * @param callbackfn - Function to call for every entry in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callbackfn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, map: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callbackfn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#get:member(1)",
              "docComment": "/**\n * Returns value corresponding to the given key.\n *\n * @remarks\n *\n * Returns `undefined` if the value doesn't exist.\n *\n * @param key - Key of the entry to return.\n *\n * @returns Value corresponding to the given key, or `undefined` if such value does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#getAt:member(1)",
              "docComment": "/**\n * Returns entry at the given index.\n *\n * @remarks\n *\n * Returns `undefined` if the value doesn't exist.\n *\n * @param index - Index of the entry to return.\n *\n * @returns Entry at the given index, or undefined if none exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "[K, V] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#has:member(1)",
              "docComment": "/**\n * Returns true iff entry corresponding to the key exists.\n *\n * @param key - Key to check.\n *\n * @returns True iff an entry corresponding to the given key exists in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#keys:member(1)",
              "docComment": "/**\n * Returns keys in the map.\n *\n * @returns {@link Iterator} that iterates through the keys in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<K>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "keys"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#set:member(1)",
              "docComment": "/**\n * Sets the entry with the given `key` to the given `value`.\n *\n * @param key - Key of entry to set.\n *\n * @param value - Value of the entry to set.\n *\n * @returns The current instance of the map with the given key set to the given value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!OrderedMap#size:member",
              "docComment": "/**\n * Number of elements in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#sort:member(1)",
              "docComment": "/**\n * Sorts the map with the given {@link Ordering}.\n *\n * @param ordering - `Ordering` to sort the map with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(ordering: "
                },
                {
                  "kind": "Reference",
                  "text": "Ordering",
                  "canonicalReference": "gs-tools!Ordering:type"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ordering",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "sort"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#splice:member(1)",
              "docComment": "/**\n * Modifies the map by deleting and adding entries to the map.\n *\n * @param start - Index to start modifying the map.\n *\n * @param deleteCount - Number of entries starting at the given start index to delete.\n *\n * @param toAdd - Entries to add at the given start index.\n *\n * @returns Array of deleted entries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "splice(start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", deleteCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", ...toAdd: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "deleteCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "toAdd",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "splice"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!OrderedMap#values:member(1)",
              "docComment": "/**\n * Returns values in the map.\n *\n * @returns {@link Iterator} that iterates through the values in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "values"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            },
            {
              "startIndex": 4,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!Ordering:type",
          "docComment": "/**\n * Function that compares two items and returns a comparison result.\n *\n * @typeParam T - Type of items to compare.\n *\n * @returns The comparison result.  @hidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Ordering<T> = "
            },
            {
              "kind": "Content",
              "text": "(item1: T, item2: T) => "
            },
            {
              "kind": "Reference",
              "text": "CompareResult",
              "canonicalReference": "gs-tools!CompareResult:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Ordering",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!ParameterAnnotation:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ParameterAnnotation<D> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ParameterAnnotation",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!ParameterAnnotation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ParameterAnnotation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, readonly D[]>>>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ParameterAnnotation#getAll:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, readonly D[]>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ParameterAnnotation#getAttachedValues:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyOrderedMap",
                  "canonicalReference": "gs-tools!ReadonlyOrderedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "getAttachedValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ParameterAnnotation#getAttachedValuesForCtor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValuesForCtor(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyOrderedMap",
                  "canonicalReference": "gs-tools!ReadonlyOrderedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getAttachedValuesForCtor"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!ParameterAnnotation#getAttachedValuesForKey:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValuesForKey(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyOrderedMap",
                  "canonicalReference": "gs-tools!ReadonlyOrderedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getAttachedValuesForKey"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!ParameterAnnotator:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ParameterAnnotator<D, A extends "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ParameterAnnotator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!ParameterAnnotator:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ParameterAnnotator` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(annotator: "
                },
                {
                  "kind": "Reference",
                  "text": "Annotator",
                  "canonicalReference": "gs-tools!~Annotator:type"
                },
                {
                  "kind": "Content",
                  "text": "<A, D>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "annotator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!ParameterAnnotator#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get data(): "
                },
                {
                  "kind": "Reference",
                  "text": "ParameterAnnotation",
                  "canonicalReference": "gs-tools!ParameterAnnotation:class"
                },
                {
                  "kind": "Content",
                  "text": "<D>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!ParameterAnnotator#decorator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get decorator(): "
                },
                {
                  "kind": "Content",
                  "text": "(...args: A) => "
                },
                {
                  "kind": "Reference",
                  "text": "ParameterDecorator",
                  "canonicalReference": "!ParameterDecorator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "decorator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!Path:class",
          "docComment": "/**\n * Represents a path.\n *\n * @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Path "
            }
          ],
          "releaseTag": "Public",
          "name": "Path",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!Path:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Path` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n    parts: "
                },
                {
                  "kind": "Content",
                  "text": "readonly string[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parts",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Path#parts:member",
              "docComment": "/**\n * Parts of the path.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly parts: "
                },
                {
                  "kind": "Content",
                  "text": "readonly string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "parts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!PropertyAnnotation:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PropertyAnnotation<D> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PropertyAnnotation",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!PropertyAnnotation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PropertyAnnotation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, readonly D[]>>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!PropertyAnnotation#getAll:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAll(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, readonly D[]>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!PropertyAnnotation#getAttachedValues:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyOrderedMap",
                  "canonicalReference": "gs-tools!ReadonlyOrderedMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getAttachedValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!PropertyAnnotation#getAttachedValuesForCtor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttachedValuesForCtor(ctorFn: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | symbol, "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyMap",
                  "canonicalReference": "!ReadonlyMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", readonly D[]>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ctorFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getAttachedValuesForCtor"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!PropertyAnnotator:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PropertyAnnotator<D, A extends "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PropertyAnnotator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!PropertyAnnotator:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PropertyAnnotator` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(annotator: "
                },
                {
                  "kind": "Reference",
                  "text": "Annotator",
                  "canonicalReference": "gs-tools!~Annotator:type"
                },
                {
                  "kind": "Content",
                  "text": "<A, D>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "annotator",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!PropertyAnnotator#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get data(): "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyAnnotation",
                  "canonicalReference": "gs-tools!PropertyAnnotation:class"
                },
                {
                  "kind": "Content",
                  "text": "<D>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!PropertyAnnotator#decorator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get decorator(): "
                },
                {
                  "kind": "Content",
                  "text": "(...args: A) => "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDecorator",
                  "canonicalReference": "!PropertyDecorator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "decorator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!Random:class",
          "docComment": "/**\n * Generates random values.\n *\n * @typeParam T - Type of generated values.  @thModule random\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Random<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Random",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!Random:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Random` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", seed: "
                },
                {
                  "kind": "Reference",
                  "text": "RandomSeed",
                  "canonicalReference": "gs-tools!RandomSeed:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "seed",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Random#get:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T2>(getter: "
                },
                {
                  "kind": "Content",
                  "text": "(arg: {\n        rng: "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<undefined>;\n        value: T;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "getter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T2",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Random#get:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T2>(getter: "
                },
                {
                  "kind": "Content",
                  "text": "(arg: {\n        rng: "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<undefined>;\n        value: T;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "getter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T2",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Random#map:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<T2>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: T) => T2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T2",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Random#next:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next<T2>(getter: "
                },
                {
                  "kind": "Reference",
                  "text": "Getter",
                  "canonicalReference": "gs-tools!~Getter:type"
                },
                {
                  "kind": "Content",
                  "text": "<number, T, T2>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "getter",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T2",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Random#next:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next<T2>(count: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", getter: "
                },
                {
                  "kind": "Reference",
                  "text": "Getter",
                  "canonicalReference": "gs-tools!~Getter:type"
                },
                {
                  "kind": "Content",
                  "text": "<readonly number[], T, T2>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<T2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "getter",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T2",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "next"
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!Random#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!randomInt:function(1)",
          "docComment": "/**\n * Picks an integer from the given interval.\n *\n * @param from - The start interval (inclusive).\n *\n * @param to - The end interval (exclusive).  @return Integer picked randomly in the given interval.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomInt(from: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", to: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "from",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "to",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              }
            }
          ],
          "name": "randomInt"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!randomItem:function(1)",
          "docComment": "/**\n * Picks an item randomly from the given list.\n *\n * @param values - The list to pick the value from.  @return A value from the given list.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomItem<T>(values: "
            },
            {
              "kind": "Content",
              "text": "readonly T[]"
            },
            {
              "kind": "Content",
              "text": ", rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "randomItem"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!randomPickWeighted:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomPickWeighted<T>(items: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<readonly [T, number]>"
            },
            {
              "kind": "Content",
              "text": ", rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<T | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "randomPickWeighted"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!randomPickWeightedMultiple:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomPickWeightedMultiple<T>(items: "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<readonly [T, number]>"
            },
            {
              "kind": "Content",
              "text": ", count: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<readonly T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "count",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "randomPickWeightedMultiple"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!RandomSeed:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RandomSeed "
            }
          ],
          "releaseTag": "Public",
          "name": "RandomSeed",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!RandomSeed#next:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Content",
                  "text": "readonly [number, "
                },
                {
                  "kind": "Reference",
                  "text": "RandomSeed",
                  "canonicalReference": "gs-tools!RandomSeed:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "next"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!randomShortId:function(1)",
          "docComment": "/**\n * Generates a random short ID.\n *\n * A short ID is a 7 characters long ID. Each character is a case sensitive alphanumeric character.\n *\n * @return A randomly generated short ID.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomShortId(rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "randomShortId"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!RawSheet:interface",
          "docComment": "/**\n * A raw Google Sheets table.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RawSheet "
            }
          ],
          "releaseTag": "Public",
          "name": "RawSheet",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!RawSheet#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly data: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "GridData",
                  "canonicalReference": "gs-tools!GridData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!RawSheet#merges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly merges?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Merge",
                  "canonicalReference": "gs-tools!Merge:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "merges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!ReadonlyOrderedMap:interface",
          "docComment": "/**\n * {@link OrderedMap} that cannot be modified\n *\n * @typeParam K - Type of keys in the map.\n *\n * @typeParam V - Type of values in the map.  @thModule collect.structures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReadonlyOrderedMap<K, V> extends "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ReadonlyOrderedMap",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "gs-tools!ReadonlyOrderedMap#getAt:member(1)",
              "docComment": "/**\n * @param index - Index to return the entries at\n *\n * @returns The entry at the given index, or `undefined` if none exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "[K, V] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getAt"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!ReadonlyOrderedMap#size:member",
              "docComment": "/**\n * @returns Number of entries in the map.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!relativePath:function(1)",
          "docComment": "/**\n * Creates an {@link RelativePath} by parsing the given string.\n *\n * @param pathString - String to parse as `RelativePath`.\n *\n * @returns The parsed string as `RelativePath`.  @thModule path\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function relativePath(pathString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RelativePath",
              "canonicalReference": "gs-tools!RelativePath:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pathString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "relativePath"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!reversed:function(1)",
          "docComment": "/**\n * Returns `Ordering` that reverses the ordering.\n *\n * @param ordering - Ordering function to reverse.\n *\n * @typeParam T - Type of items to sort.\n *\n * @returns `Ordering` object that reverses the ordering of the given `Ordering`.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function reversed<T>(ordering: "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ordering",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "reversed"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!RgbColor:class",
          "docComment": "/**\n * `Color` based on its red, green, and blue components.\n *\n * @thModule color\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RgbColor extends "
            },
            {
              "kind": "Reference",
              "text": "Color",
              "canonicalReference": "gs-tools!Color:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RgbColor",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!RgbColor:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RgbColor` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n    red: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", \n    green: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", \n    blue: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "red",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "green",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "blue",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#blue:member",
              "docComment": "/**\n * Blue component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly blue: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#chroma:member",
              "docComment": "/**\n * Chroma of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get chroma(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "chroma",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#green:member",
              "docComment": "/**\n * Green component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly green: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "green",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#hue:member",
              "docComment": "/**\n * Hue component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hue(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#lightness:member",
              "docComment": "/**\n * Lightness component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lightness(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lightness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#red:member",
              "docComment": "/**\n * Red component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly red: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "red",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "gs-tools!RgbColor#saturation:member",
              "docComment": "/**\n * Saturation component of the color.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get saturation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "saturation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!RowData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RowData "
            }
          ],
          "releaseTag": "Public",
          "name": "RowData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!RowData#values:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly values?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "CellData",
                  "canonicalReference": "gs-tools!CellData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "values",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!Runnable:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Runnable "
            }
          ],
          "releaseTag": "Public",
          "name": "Runnable",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Runnable#addSetup:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected addSetup(obs: "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "obs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "addSetup"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!Runnable#run:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run(): "
                },
                {
                  "kind": "Reference",
                  "text": "Observable",
                  "canonicalReference": "rxjs!Observable:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "run"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!scanArray:function(1)",
          "docComment": "/**\n * Given a sequence of `ArrayDiff`s, rebuild the array.\n *\n * @typeParam T - Type of element in the array.\n *\n * @returns Operator that emits arrays as applied to the input diffs.  @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function scanArray<T>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ArrayDiff",
              "canonicalReference": "gs-tools!ArrayDiff:type"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "scanArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!scanMap:function(1)",
          "docComment": "/**\n * Given a sequence of `MapDiff`s, rebuild the map.\n *\n * @typeParam K - Type of the map keys.\n *\n * @typeParam V - Type of the map values.\n *\n * @returns Operator that emits maps as applied to the input diffs.  @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function scanMap<K, V>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MapDiff",
              "canonicalReference": "gs-tools!MapDiff:type"
            },
            {
              "kind": "Content",
              "text": "<K, V>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "scanMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!scanSet:function(1)",
          "docComment": "/**\n * Given a sequence of `SetDiff`s, rebuild the set.\n *\n * @typeParam T - Type of element in the set.\n *\n * @returns Operator that emits sets as applied to the input diffs.  @thModule rxjs.state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function scanSet<T>(): "
            },
            {
              "kind": "Reference",
              "text": "OperatorFunction",
              "canonicalReference": "rxjs!OperatorFunction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SetDiff",
              "canonicalReference": "gs-tools!SetDiff:type"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "scanSet"
        },
        {
          "kind": "Variable",
          "canonicalReference": "gs-tools!SEPARATOR:var",
          "docComment": "/**\n * Separator between path parts.\n *\n * @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SEPARATOR = \"/\""
            }
          ],
          "releaseTag": "Public",
          "name": "SEPARATOR",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!SetAdd:interface",
          "docComment": "/**\n * Adds the given value to the set.\n *\n * @typeParam T - Type of the set element.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SetAdd<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SetAdd",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetAdd#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'add'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetAdd#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!setConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setConverter<T>(itemConverter: "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<T, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Converter",
              "canonicalReference": "nabu!Converter:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlySet",
              "canonicalReference": "!ReadonlySet:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "itemConverter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "setConverter"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!SetDelete:interface",
          "docComment": "/**\n * Deletes the given value from the set.\n *\n * @typeParam T - Type of the set element.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SetDelete<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SetDelete",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetDelete#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'delete'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetDelete#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!SetDiff:type",
          "docComment": "/**\n * Differences between sets.\n *\n * @typeParam T - Type of the set element.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SetDiff<T> = "
            },
            {
              "kind": "Reference",
              "text": "SetInit",
              "canonicalReference": "gs-tools!SetInit:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SetDelete",
              "canonicalReference": "gs-tools!SetDelete:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SetAdd",
              "canonicalReference": "gs-tools!SetAdd:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SetDiff",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!setFilenameExt:function(1)",
          "docComment": "/**\n * Given a filename and an extension, create an item name.\n *\n * @param filename - The filename without extension.\n *\n * @param extension - The extension name.\n *\n * @returns The item name with the filename and extension parts.  @thModule\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setFilenameExt(filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", extension: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "extension",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "setFilenameExt"
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!SetInit:interface",
          "docComment": "/**\n * Initializes the set by setting it to the given set.\n *\n * @typeParam T - Type of the set element.  @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SetInit<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SetInit",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetInit#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'init'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SetInit#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!SheetsCell:interface",
          "docComment": "/**\n * Cell in Google Sheets.\n *\n * @thHidden\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SheetsCell "
            }
          ],
          "releaseTag": "Public",
          "name": "SheetsCell",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SheetsCell#fromColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly fromColumn: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fromColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SheetsCell#fromRow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly fromRow: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fromRow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SheetsCell#toColumn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly toColumn: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "toColumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SheetsCell#toRow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly toRow: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "toRow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SheetsCell#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtendedValue",
                  "canonicalReference": "gs-tools!ExtendedValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "gs-tools!SheetsTable:type",
          "docComment": "/**\n * Simpler representation of Google Sheets table.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SheetsTable = "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReadonlyArray",
              "canonicalReference": "!ReadonlyArray:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SheetsCell",
              "canonicalReference": "gs-tools!SheetsCell:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SheetsTable",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!shuffle:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function shuffle<T>(items: "
            },
            {
              "kind": "Content",
              "text": "readonly T[]"
            },
            {
              "kind": "Content",
              "text": ", rng: "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ", getBaseWeight?: "
            },
            {
              "kind": "Content",
              "text": "(item: T) => number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Random",
              "canonicalReference": "gs-tools!Random:class"
            },
            {
              "kind": "Content",
              "text": "<readonly T[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "rng",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "getBaseWeight",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "shuffle"
        },
        {
          "kind": "Class",
          "canonicalReference": "gs-tools!SimpleIdGenerator:class",
          "docComment": "/**\n * Simple implementation of ID generator that uses short IDs.\n *\n * @thModule random\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SimpleIdGenerator extends "
            },
            {
              "kind": "Reference",
              "text": "BaseIdGenerator",
              "canonicalReference": "gs-tools!BaseIdGenerator:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SimpleIdGenerator",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "gs-tools!SimpleIdGenerator:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SimpleIdGenerator` class\n *\n * @param rng - The random number generator.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(rng?: "
                },
                {
                  "kind": "Reference",
                  "text": "Random",
                  "canonicalReference": "gs-tools!Random:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rng",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!SimpleIdGenerator#newId:member(1)",
              "docComment": "/**\n * Generates a new ID.\n *\n * @returns The newly generated ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected newId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "newId"
            },
            {
              "kind": "Method",
              "canonicalReference": "gs-tools!SimpleIdGenerator#resolveConflict:member(1)",
              "docComment": "/**\n * Attempts to resolve a conflict for the given ID.\n *\n * @remarks\n *\n * This is a best effort method to come up with another ID based on the knowledge that the given ID already conflicts.\n *\n * @param id - The conflicting ID.\n *\n * @returns Best effort new ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected resolveConflict(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "resolveConflict"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "gs-tools!SingleCell:interface",
          "docComment": "/**\n * Cell that contains a single cell in the sheet.\n *\n * @remarks\n *\n * If the cell has unmerged row header and column header, the cell will be a single cell.\n *\n * @thModule gapi.sheets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SingleCell "
            }
          ],
          "releaseTag": "Public",
          "name": "SingleCell",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SingleCell#isSingle:member",
              "docComment": "/**\n * The cell does not have multiple subcells.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isSingle: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSingle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "gs-tools!SingleCell#value:member",
              "docComment": "/**\n * Value inside the cell.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "ExtendedValue",
                  "canonicalReference": "gs-tools!ExtendedValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!stringMatchConverter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stringMatchConverter<T extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ">(acceptableValues: "
            },
            {
              "kind": "Reference",
              "text": "Iterable",
              "canonicalReference": "!Iterable:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "StringMatchConverter",
              "canonicalReference": "gs-tools!~StringMatchConverter:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "acceptableValues",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "stringMatchConverter"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!switchMapNonNull:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function switchMapNonNull<A, B>(fn: "
            },
            {
              "kind": "Content",
              "text": "(input: "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<A, null>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<B>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(source: "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<A>) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<B | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "B",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "switchMapNonNull"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!toLowerCaseString:function(1)",
          "docComment": "/**\n * Converts the given enum value to lower case version of its name.\n *\n * @param enumValue - The enum value to convert.\n *\n * @param enumSet - The set of enum values.  @return The lower case version of the enum name that corresponds to the enum value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toLowerCaseString(enumValue: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", enumSet: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "enumValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "enumSet",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "toLowerCaseString"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!typeBased:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function typeBased<T extends "
            },
            {
              "kind": "Reference",
              "text": "Serializable",
              "canonicalReference": "nabu!Serializable:type"
            },
            {
              "kind": "Content",
              "text": ">(type: "
            },
            {
              "kind": "Reference",
              "text": "Type",
              "canonicalReference": "gs-types!Type:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TypeBasedConverter",
              "canonicalReference": "gs-tools!~TypeBasedConverter:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "typeBased"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!usingResource:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function usingResource<R, T>(resourceFactory: "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Resource",
              "canonicalReference": "gs-tools!~Resource:interface"
            },
            {
              "kind": "Content",
              "text": "<R>"
            },
            {
              "kind": "Content",
              "text": ", observableFactory: "
            },
            {
              "kind": "Content",
              "text": "(resource: R) => "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Observable",
              "canonicalReference": "rxjs!Observable:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "resourceFactory",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "parameterName": "observableFactory",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "usingResource"
        },
        {
          "kind": "Function",
          "canonicalReference": "gs-tools!withMap:function(1)",
          "docComment": "/**\n * Returns ordering after mapping.\n *\n * @remarks\n *\n * This applies the mapping function to every item, then uses the given `Ordering` to figure out the ordering.\n *\n * @param mapFn - The mapping function.\n *\n * @param ordering - Ordering to apply.\n *\n * @typeParam T1 - Type of item to sort.\n *\n * @typeParam T2 - Output type of the mapping function.\n *\n * @returns Ordering that applies the mapping function before passing it to the given `Ordering`.  @thModule collect.compare\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function withMap<T1, T2>(mapFn: "
            },
            {
              "kind": "Content",
              "text": "(input: T1) => T2"
            },
            {
              "kind": "Content",
              "text": ", ordering: "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T2>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Ordering",
              "canonicalReference": "gs-tools!Ordering:type"
            },
            {
              "kind": "Content",
              "text": "<T1>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mapFn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "ordering",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T1",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T2",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "withMap"
        }
      ]
    }
  ]
}
