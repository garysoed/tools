{
  "api": {
    "name": "gs-tools",
    "entityType": "p",
    "examples": [],
    "ref": "gs-tools!",
    "summary": {
      "docNodeType": "e"
    },
    "remarks": {
      "docNodeType": "e"
    },
    "hidden": false,
    "module": "",
    "classes": [
      {
        "name": "BaseDisposable",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!BaseDisposable_class",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Base class of all disposable objects."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class BaseDisposable implements "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Disposable_interface"
              },
              "text": "Disposable"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "isDisposed$",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#isDisposed$_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly isDisposed$: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "rxjs!BehaviorSubject_class"
                  },
                  "text": "BehaviorSubject"
                },
                {
                  "docNodeType": "t",
                  "text": "<boolean>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "onDispose$",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#onDispose$_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "protected get onDispose$(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<{}>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": true
          }
        ],
        "methods": [
          {
            "name": "addDisposable",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#addDisposable_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Adds the given disposable so they are disposed when this object is disposed."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [
              {
                "name": "disposables",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Disposable objects to be disposed when this object is disposed."
                    }
                  ]
                }
              }
            ],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "addDisposable(...disposables: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Disposable_interface"
                  },
                  "text": "Disposable"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "dispose",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#dispose_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Dispose this object."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "dispose(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "disposeInternal",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#disposeInternal_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Override this method for custom logic that are ran during disposal."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "protected disposeInternal(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": true,
            "overloads": []
          },
          {
            "name": "isDisposed",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!BaseDisposable#isDisposed_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "isDisposed(): "
                },
                {
                  "docNodeType": "t",
                  "text": "boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "Cases",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!Cases_class",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Utility class to convert between different capitalization styles."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class Cases "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "of",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Cases.of_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Starting point of the case conversion."
                    }
                  ]
                },
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": " Cases object to chain the conversion."
                    }
                  ]
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "static of(input: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Cases_class"
                  },
                  "text": "Cases"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "toCamelCase",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Cases#toCamelCase_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Converts to camelCase."
                    }
                  ]
                },
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": " The camel case version of the string."
                    }
                  ]
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "toCamelCase(): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "toLowerCase",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Cases#toLowerCase_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Converts to lower-case."
                    }
                  ]
                },
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": " The lower case version of the string."
                    }
                  ]
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "toLowerCase(): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "toPascalCase",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Cases#toPascalCase_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Converts to PascalCase."
                    }
                  ]
                },
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": " The pascal case version of the string."
                    }
                  ]
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "toPascalCase(): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "toUpperCase",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Cases#toUpperCase_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Converts to UPPER_CASE."
                    }
                  ]
                },
                {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": " The upper case version of the string."
                    }
                  ]
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "toUpperCase(): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "ClassAnnotation",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!ClassAnnotation_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class ClassAnnotation<D> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getAllValues",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ClassAnnotation#getAllValues_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAllValues(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Function"
                  },
                  "text": "Function"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValues",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ClassAnnotation#getAttachedValues_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Function"
                  },
                  "text": "Function"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Function"
                  },
                  "text": "Function"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "ClassAnnotator",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!ClassAnnotator_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class ClassAnnotator<D, A extends "
            },
            {
              "docNodeType": "t",
              "text": "any[]"
            },
            {
              "docNodeType": "t",
              "text": "> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "A",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "data",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ClassAnnotator#data_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get data(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ClassAnnotation_class"
                  },
                  "text": "ClassAnnotation"
                },
                {
                  "docNodeType": "t",
                  "text": "<D>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "decorator",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ClassAnnotator#decorator_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get decorator(): "
                },
                {
                  "docNodeType": "t",
                  "text": "(...args: A) => "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!ClassDecorator_type"
                  },
                  "text": "ClassDecorator"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "isAbstract": false
      },
      {
        "name": "DisposableFunction",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!DisposableFunction_class",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Wrapper around a function that executes the function when this object is disposed."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class DisposableFunction extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!BaseDisposable_class"
              },
              "text": "BaseDisposable"
            },
            {
              "docNodeType": "t",
              "text": " "
            },
            {
              "docNodeType": "t",
              "text": "implements "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!DisposableFunction_interface"
              },
              "text": "IDisposableFunction"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "disposeInternal",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!DisposableFunction#disposeInternal_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "disposeInternal(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "of",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!DisposableFunction.of_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "static of(fn: "
                },
                {
                  "docNodeType": "t",
                  "text": "() => void"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!DisposableFunction_class"
                  },
                  "text": "DisposableFunction"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "run",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!DisposableFunction#run_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Runs the inner function."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "run(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "FakeSeed",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!FakeSeed_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class FakeSeed implements "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!RandomSeed_interface"
              },
              "text": "RandomSeed"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "values",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!FakeSeed#values_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "values: "
                },
                {
                  "docNodeType": "t",
                  "text": "number[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [
          {
            "name": "next",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!FakeSeed#next_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "next(): "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly [number, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!RandomSeed_interface"
                  },
                  "text": "RandomSeed"
                },
                {
                  "docNodeType": "t",
                  "text": "]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "HslColor",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!HslColor_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class HslColor extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!BaseColor_class"
              },
              "text": "BaseColor"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getBlue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getBlue_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getBlue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getChroma",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getChroma_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getChroma(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getGreen",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getGreen_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getGreen(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getHue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getHue_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getHue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getLightness",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getLightness_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getLightness(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getRed",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getRed_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getRed(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getSaturation",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor#getSaturation_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getSaturation(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "newInstance",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!HslColor.newInstance_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Creates an instance of the class."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [
              {
                "name": "hue",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The hue component of the color."
                    }
                  ]
                }
              },
              {
                "name": "saturation",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The saturation component of the color."
                    }
                  ]
                }
              },
              {
                "name": "lightness",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The lightness component of the color."
                    }
                  ]
                }
              }
            ],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "static newInstance(hue: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", saturation: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", lightness: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!HslColor_class"
                  },
                  "text": "HslColor"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "InMemoryStorage",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!InMemoryStorage_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class InMemoryStorage<T> implements "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!EditableStorage_interface"
              },
              "text": "EditableStorage"
            },
            {
              "docNodeType": "t",
              "text": "<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "clear",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#clear_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "clear(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "delete",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#delete_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "delete(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "deleteAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#deleteAt_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "deleteAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "findIndex",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#findIndex_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "findIndex(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<number | null>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "generateId",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#generateId_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "generateId(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<string>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "has",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#has_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "has(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<boolean>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "insertAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#insertAt_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "insertAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "listIds",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#listIds_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "listIds(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ArrayDiff_type"
                  },
                  "text": "ArrayDiff"
                },
                {
                  "docNodeType": "t",
                  "text": "<string>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "read",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#read_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "read(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<T | null>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "update",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#update_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "update(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "updateAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!InMemoryStorage#updateAt_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "updateAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "LocalStorage",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!LocalStorage_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class LocalStorage<T> extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!WebStorage_class"
              },
              "text": "WebStorage"
            },
            {
              "docNodeType": "t",
              "text": "<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "of",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!LocalStorage.of_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "static of<T>(window: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Window"
                  },
                  "text": "Window"
                },
                {
                  "docNodeType": "t",
                  "text": ", prefix: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", converter: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "nabu!Converter_interface"
                  },
                  "text": "Converter"
                },
                {
                  "docNodeType": "t",
                  "text": "<T, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "nabu!Serializable_type"
                  },
                  "text": "Serializable"
                },
                {
                  "docNodeType": "t",
                  "text": ">"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!LocalStorage_class"
                  },
                  "text": "LocalStorage"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [
              {
                "name": "T",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "OrderedMap",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!OrderedMap_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class OrderedMap<K, V> implements "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "ReadonlyMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>"
            },
            {
              "docNodeType": "t",
              "text": ", "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Sortable_interface"
              },
              "text": "Sortable"
            },
            {
              "docNodeType": "t",
              "text": "<[K, V]> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "[Symbol.toStringTag]",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!OrderedMap#[Symbol.toStringTag]_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly ["
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!SymbolConstructor#toStringTag"
                  },
                  "text": "Symbol.toStringTag"
                },
                {
                  "docNodeType": "t",
                  "text": "] = \"OrderedMap\";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "size",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!OrderedMap#size_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get size(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [
          {
            "name": "[Symbol.iterator]",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#[Symbol.iterator]_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "["
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!SymbolConstructor#iterator"
                  },
                  "text": "Symbol.iterator"
                },
                {
                  "docNodeType": "t",
                  "text": "](): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!IterableIterator_interface"
                  },
                  "text": "IterableIterator"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "clear",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#clear_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "clear(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "delete",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#delete_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "delete(key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "entries",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#entries_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "entries(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!IterableIterator_interface"
                  },
                  "text": "IterableIterator"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "forEach",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#forEach_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "forEach(callbackfn: "
                },
                {
                  "docNodeType": "t",
                  "text": "(value: V, key: K, map: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "Map"
                },
                {
                  "docNodeType": "t",
                  "text": "<K, V>) => void"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "get",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#get_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get(key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "V | undefined"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#getAt_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "[K, V] | undefined"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "has",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#has_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "has(key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "keys",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#keys_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "keys(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!IterableIterator_interface"
                  },
                  "text": "IterableIterator"
                },
                {
                  "docNodeType": "t",
                  "text": "<K>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "set",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#set_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "set(key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": ", value: "
                },
                {
                  "docNodeType": "t",
                  "text": "V"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "this"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "sort",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#sort_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "sort(ordering: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Ordering_type"
                  },
                  "text": "Ordering"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "splice",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#splice_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "splice(start: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", deleteCount: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", ...toAdd: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!ReadonlyArray_interface"
                  },
                  "text": "ReadonlyArray"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Array"
                  },
                  "text": "Array"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "values",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!OrderedMap#values_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "values(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!IterableIterator_interface"
                  },
                  "text": "IterableIterator"
                },
                {
                  "docNodeType": "t",
                  "text": "<V>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "ParameterAnnotation",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!ParameterAnnotation_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class ParameterAnnotation<D> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getAll",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotation#getAll_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAll(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<string | symbol, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<number, readonly D[]>>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValues",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotation#getAttachedValues_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", key: "
                },
                {
                  "docNodeType": "t",
                  "text": "string | symbol"
                },
                {
                  "docNodeType": "t",
                  "text": ", index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ReadonlyOrderedMap_interface"
                  },
                  "text": "ReadonlyOrderedMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValuesForCtor",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotation#getAttachedValuesForCtor_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValuesForCtor(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<string | symbol, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<number, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ReadonlyOrderedMap_interface"
                  },
                  "text": "ReadonlyOrderedMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValuesForKey",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotation#getAttachedValuesForKey_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValuesForKey(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", key: "
                },
                {
                  "docNodeType": "t",
                  "text": "string | symbol"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<number, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ReadonlyOrderedMap_interface"
                  },
                  "text": "ReadonlyOrderedMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "ParameterAnnotator",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!ParameterAnnotator_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class ParameterAnnotator<D, A extends "
            },
            {
              "docNodeType": "t",
              "text": "any[]"
            },
            {
              "docNodeType": "t",
              "text": "> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "A",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "data",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotator#data_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get data(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ParameterAnnotation_class"
                  },
                  "text": "ParameterAnnotation"
                },
                {
                  "docNodeType": "t",
                  "text": "<D>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "decorator",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ParameterAnnotator#decorator_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get decorator(): "
                },
                {
                  "docNodeType": "t",
                  "text": "(...args: A) => "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!ParameterDecorator_type"
                  },
                  "text": "ParameterDecorator"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "isAbstract": false
      },
      {
        "name": "PropertyAnnotation",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!PropertyAnnotation_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class PropertyAnnotation<D> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getAll",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!PropertyAnnotation#getAll_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAll(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<string | symbol, readonly D[]>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValues",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!PropertyAnnotation#getAttachedValues_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValues(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", key: "
                },
                {
                  "docNodeType": "t",
                  "text": "string | symbol"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ReadonlyOrderedMap_interface"
                  },
                  "text": "ReadonlyOrderedMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getAttachedValuesForCtor",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!PropertyAnnotation#getAttachedValuesForCtor_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAttachedValuesForCtor(ctorFn: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<string | symbol, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Object_interface"
                  },
                  "text": "Object"
                },
                {
                  "docNodeType": "t",
                  "text": ", readonly D[]>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "PropertyAnnotator",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!PropertyAnnotator_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class PropertyAnnotator<D, A extends "
            },
            {
              "docNodeType": "t",
              "text": "any[]"
            },
            {
              "docNodeType": "t",
              "text": "> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "D",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "A",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "data",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!PropertyAnnotator#data_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get data(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!PropertyAnnotation_class"
                  },
                  "text": "PropertyAnnotation"
                },
                {
                  "docNodeType": "t",
                  "text": "<D>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "decorator",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!PropertyAnnotator#decorator_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get decorator(): "
                },
                {
                  "docNodeType": "t",
                  "text": "(...args: A) => "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!PropertyDecorator_type"
                  },
                  "text": "PropertyDecorator"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "isAbstract": false
      },
      {
        "name": "Random",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!Random_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class Random<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Random#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly value: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [
          {
            "name": "get",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Random#get_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "get<T2>(getter: "
                },
                {
                  "docNodeType": "t",
                  "text": "(arg: {\n        rng: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Random_class"
                  },
                  "text": "Random"
                },
                {
                  "docNodeType": "t",
                  "text": "<undefined>;\n        value: T;\n    }) => "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Random_class"
                  },
                  "text": "Random"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Random_class"
                  },
                  "text": "Random"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "map",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Random#map_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "map<T2>(fn: "
                },
                {
                  "docNodeType": "t",
                  "text": "(value: T) => T2"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Random_class"
                  },
                  "text": "Random"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "next",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Random#next_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "next<T2>(getter: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!~Getter_type"
                  },
                  "text": "Getter"
                },
                {
                  "docNodeType": "t",
                  "text": "<number, T, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Random_class"
                  },
                  "text": "Random"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": [
              {
                "args": [],
                "excerpt": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "next<T2>(count: "
                    },
                    {
                      "docNodeType": "t",
                      "text": "number"
                    },
                    {
                      "docNodeType": "t",
                      "text": ", getter: "
                    },
                    {
                      "docNodeType": "li",
                      "link": {
                        "isCode": true,
                        "link": "gs-tools!~Getter_type"
                      },
                      "text": "Getter"
                    },
                    {
                      "docNodeType": "t",
                      "text": "<readonly number[], T, T2>"
                    },
                    {
                      "docNodeType": "t",
                      "text": "): "
                    },
                    {
                      "docNodeType": "li",
                      "link": {
                        "isCode": true,
                        "link": "gs-tools!Random_class"
                      },
                      "text": "Random"
                    },
                    {
                      "docNodeType": "t",
                      "text": "<T2>"
                    },
                    {
                      "docNodeType": "t",
                      "text": ";"
                    }
                  ]
                },
                "ref": "gs-tools!Random#next_member(2)",
                "typeParams": [
                  {
                    "name": "T2",
                    "description": {
                      "docNodeType": "e"
                    }
                  }
                ],
                "returns": {
                  "docNodeType": "e"
                }
              }
            ]
          }
        ],
        "isAbstract": false
      },
      {
        "name": "RgbColor",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!RgbColor_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class RgbColor extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!BaseColor_class"
              },
              "text": "BaseColor"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getBlue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getBlue_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getBlue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getChroma",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getChroma_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getChroma(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getGreen",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getGreen_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getGreen(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getHue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getHue_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getHue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getLightness",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getLightness_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getLightness(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getRed",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getRed_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getRed(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getSaturation",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor#getSaturation_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getSaturation(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "newInstance",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RgbColor.newInstance_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Creates an instance of the class."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [
              {
                "name": "red",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The red component of the color."
                    }
                  ]
                }
              },
              {
                "name": "green",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The green component of the color."
                    }
                  ]
                }
              },
              {
                "name": "blue",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "The blue component of the color."
                    }
                  ]
                }
              }
            ],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "static newInstance(red: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", green: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", blue: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!RgbColor_class"
                  },
                  "text": "RgbColor"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "Runnable",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!Runnable_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare abstract class Runnable "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "addSetup",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Runnable#addSetup_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "protected addSetup(obs: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": true,
            "overloads": []
          },
          {
            "name": "run",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Runnable#run_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "run(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": true
      },
      {
        "name": "SetSubject",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!SetSubject_class",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class SetSubject<T> extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!Subject_class"
              },
              "text": "Subject"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetDiff_type"
              },
              "text": "SetDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "_subscribe",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SetSubject#_subscribe_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": []
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "_subscribe(subscriber: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "rxjs!Subscriber_class"
                  },
                  "text": "Subscriber"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!SetDiff_type"
                  },
                  "text": "SetDiff"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "rxjs!Subscription_class"
                  },
                  "text": "Subscription"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "add",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SetSubject#add_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "add(value: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "delete",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SetSubject#delete_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "delete(value: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "next",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SetSubject#next_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "next(newDiff: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!SetDiff_type"
                  },
                  "text": "SetDiff"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "setAll",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SetSubject#setAll_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "setAll(newItems: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Set"
                  },
                  "text": "ReadonlySet"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "isAbstract": false
      },
      {
        "name": "SimpleIdGenerator",
        "entityType": "cl",
        "examples": [],
        "ref": "gs-tools!SimpleIdGenerator_class",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Simple implementation of ID generator that uses short IDs."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare class SimpleIdGenerator extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!BaseIdGenerator_class"
              },
              "text": "BaseIdGenerator"
            },
            {
              "docNodeType": "t",
              "text": " "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "newId",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SimpleIdGenerator#newId_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "protected newId(): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": true,
            "overloads": []
          },
          {
            "name": "resolveConflict",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!SimpleIdGenerator#resolveConflict_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "protected resolveConflict(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": true,
            "overloads": []
          }
        ],
        "isAbstract": false
      }
    ],
    "constants": [
      {
        "name": "Colors",
        "entityType": "co",
        "examples": [],
        "ref": "gs-tools!Colors_var",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Colors: "
            },
            {
              "docNodeType": "t",
              "text": "{\n    fromCssColor(cssColor: string): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": " | null;\n    getContrast(foreground: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ", background: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": "): number;\n    getDistance(color1: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ", color2: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": "): number;\n    mix(color1: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ", color2: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ", amount: number): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ";\n    neonize(color: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ", ratio: number): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Color_interface"
              },
              "text": "Color"
            },
            {
              "docNodeType": "t",
              "text": ";\n}"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isGlobal": true,
        "isProtected": false
      },
      {
        "name": "Errors",
        "entityType": "co",
        "examples": [],
        "ref": "gs-tools!Errors_var",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Errors: "
            },
            {
              "docNodeType": "t",
              "text": "{\n    assert(fieldName: string): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!AssertionBuilder_class"
              },
              "text": "AssertionBuilder"
            },
            {
              "docNodeType": "t",
              "text": ";\n}"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isGlobal": true,
        "isProtected": false
      }
    ],
    "functions": [
      {
        "name": "$",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function $<F>(source: "
            },
            {
              "docNodeType": "t",
              "text": "F"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "F"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": [
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3, T4, T5, T6, T7, T8>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn4: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T3, T4>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn5: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T4, T5>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn6: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T5, T6>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn7: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T6, T7>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn8: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T7, T8>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T8"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(10)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T4",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T5",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T6",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T7",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T8",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T0"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(2)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T1"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(3)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T2"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(4)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T3"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(5)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3, T4>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn4: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T3, T4>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T4"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(6)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T4",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3, T4, T5>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn4: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T3, T4>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn5: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T4, T5>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T5"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(7)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T4",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T5",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3, T4, T5, T6>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn4: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T3, T4>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn5: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T4, T5>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn6: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T5, T6>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T6"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(8)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T4",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T5",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T6",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function $<F, T0, T1, T2, T3, T4, T5, T6, T7>(source: "
                },
                {
                  "docNodeType": "t",
                  "text": "F"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn0: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<F, T0>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn1: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T0, T1>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn2: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T1, T2>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn3: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T2, T3>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn4: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T3, T4>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn5: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T4, T5>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn6: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T5, T6>"
                },
                {
                  "docNodeType": "t",
                  "text": ", fn7: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<T6, T7>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "T7"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$_function(9)",
            "typeParams": [
              {
                "name": "F",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T0",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T1",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T2",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T3",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T4",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T5",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T6",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "T7",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          }
        ]
      },
      {
        "name": "$asArray",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$asArray_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asArray<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$asMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$asMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asMap<K, V>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<[K, V]>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "Map"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$asOrderedMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$asOrderedMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asOrderedMap<K, V>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<[K, V]>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!OrderedMap_class"
              },
              "text": "OrderedMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$asSet",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$asSet_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asSet<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "Set"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$diff",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$diff_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function diff<T>(other: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$every",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$every_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function every(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~FiniteIterable_type"
              },
              "text": "FiniteIterable"
            },
            {
              "docNodeType": "t",
              "text": "<boolean>, boolean>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$filter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$filter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filter<T1, T2 extends "
            },
            {
              "docNodeType": "t",
              "text": "T1"
            },
            {
              "docNodeType": "t",
              "text": ">(filterFn: "
            },
            {
              "docNodeType": "t",
              "text": "(item: T1) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~item"
              },
              "text": "item"
            },
            {
              "docNodeType": "t",
              "text": " is T2"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T1>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T2>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T1",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T2",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": [
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function filter<T>(filterFn: "
                },
                {
                  "docNodeType": "t",
                  "text": "(item: T) => boolean"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
                  },
                  "text": "Iterable"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
                  },
                  "text": "Iterable"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$filter_function(2)",
            "typeParams": [
              {
                "name": "T",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          }
        ]
      },
      {
        "name": "$filterByType",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$filterByType_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterByType<T>(type: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-types!Type_class"
              },
              "text": "Type"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$filterDefined",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$filterDefined_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterDefined<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T | undefined>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<T, undefined>>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$filterNonNull",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$filterNonNull_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterNonNull<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<T, null>>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$first",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$first_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Returns the first element in the iterable, or null if there are none."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function first<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, T | null>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$flat",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$flat_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function flat<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~FiniteIterable_type"
              },
              "text": "FiniteIterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": [
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function flat<K, V>(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
                  },
                  "text": "Iterable"
                },
                {
                  "docNodeType": "t",
                  "text": "<"
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<K, V>>, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
                  },
                  "text": "Iterable"
                },
                {
                  "docNodeType": "t",
                  "text": "<[K, V]>>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!$flat_function(2)",
            "typeParams": [
              {
                "name": "K",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "V",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          }
        ]
      },
      {
        "name": "$head",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$head_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function head<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, T | undefined>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$intersect",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$intersect_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function intersect<T>(setB: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$join",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$join_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function join(separator: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<readonly string[], string>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$map",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$map_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Returns iterable with the values mapped from the given function."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function map<F, T>(mapFn: "
            },
            {
              "docNodeType": "t",
              "text": "(from: F) => T"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<F>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$recordToMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$recordToMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function recordToMap(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Record_type"
              },
              "text": "Record"
            },
            {
              "docNodeType": "t",
              "text": "<string, unknown>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "Map"
            },
            {
              "docNodeType": "t",
              "text": "<string, unknown>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$reverse",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$reverse_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function reverse<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<readonly T[], readonly T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$size",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$size_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function size(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~HasSize_type"
              },
              "text": "HasSize"
            },
            {
              "docNodeType": "t",
              "text": ", number>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$some",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$some_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function some(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~FiniteIterable_type"
              },
              "text": "FiniteIterable"
            },
            {
              "docNodeType": "t",
              "text": "<boolean>, boolean>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$sort",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$sort_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function sort<T>(ordering: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<readonly T[], readonly T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$take",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$take_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Grabs the first "
            },
            {
              "docNodeType": "c",
              "code": "count"
            },
            {
              "docNodeType": "t",
              "text": " elements from the iterable."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function take<T>(count: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>, readonly T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "$zip",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!$zip_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function zip<T1, T2>(other: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T2>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T1>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<[T1, T2]>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T1",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T2",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "aleaSeed",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!aleaSeed_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function aleaSeed(seed: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!RandomSeed_interface"
              },
              "text": "RandomSeed"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "arrayFrom",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!arrayFrom_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function arrayFrom(attrs: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!NamedNodeMap_interface"
              },
              "text": "NamedNodeMap"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "readonly "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Attr_interface"
              },
              "text": "Attr"
            },
            {
              "docNodeType": "t",
              "text": "[]"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": [
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function arrayFrom<N extends "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!Node_interface"
                  },
                  "text": "Node"
                },
                {
                  "docNodeType": "t",
                  "text": ">(nodeListOf: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!NodeListOf_interface"
                  },
                  "text": "NodeListOf"
                },
                {
                  "docNodeType": "t",
                  "text": "<N>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly N[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!arrayFrom_function(2)",
            "typeParams": [
              {
                "name": "N",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function arrayFrom(filelist: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!FileList_interface"
                  },
                  "text": "FileList"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!File_interface"
                  },
                  "text": "File"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!arrayFrom_function(3)",
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            }
          },
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function arrayFrom(nodeListOf: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "!HTMLCollection_interface"
                  },
                  "text": "HTMLCollection"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Element"
                  },
                  "text": "Element"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!arrayFrom_function(4)",
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            }
          }
        ]
      },
      {
        "name": "asMultiCell",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!asMultiCell_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asMultiCell(cell: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Cell_type"
              },
              "text": "Cell"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MultiCell_interface"
              },
              "text": "MultiCell"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "assertByType",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!assertByType_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function assertByType<T>(type: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-types!Type_class"
              },
              "text": "Type"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "assertNonNull",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!assertNonNull_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function assertNonNull<T>(msg?: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<T, null>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "assertUnreachable",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!assertUnreachable_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function assertUnreachable(_: "
            },
            {
              "docNodeType": "t",
              "text": "never"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "never"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "asSingleCell",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!asSingleCell_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function asSingleCell(cell: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Cell_type"
              },
              "text": "Cell"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SingleCell_interface"
              },
              "text": "SingleCell"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "branch",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!branch_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function branch<V, P extends "
            },
            {
              "docNodeType": "t",
              "text": "V"
            },
            {
              "docNodeType": "t",
              "text": ", U>(conditionFn: "
            },
            {
              "docNodeType": "t",
              "text": "(value: V) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~value"
              },
              "text": "value"
            },
            {
              "docNodeType": "t",
              "text": " is P"
            },
            {
              "docNodeType": "t",
              "text": ", passOperator: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<P, U>"
            },
            {
              "docNodeType": "t",
              "text": ", failOperator: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<V, U>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Operator_type"
              },
              "text": "Operator"
            },
            {
              "docNodeType": "t",
              "text": "<V, U>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "P",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "U",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": [
          {
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "export declare function branch<V, U>(conditionFn: "
                },
                {
                  "docNodeType": "t",
                  "text": "(value: V) => boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ", passOperator: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!~Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<V, U>"
                },
                {
                  "docNodeType": "t",
                  "text": ", failOperator: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!~Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<V, U>"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!~Operator_type"
                  },
                  "text": "Operator"
                },
                {
                  "docNodeType": "t",
                  "text": "<V, U>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "ref": "gs-tools!branch_function(2)",
            "typeParams": [
              {
                "name": "V",
                "description": {
                  "docNodeType": "e"
                }
              },
              {
                "name": "U",
                "description": {
                  "docNodeType": "e"
                }
              }
            ],
            "returns": {
              "docNodeType": "e"
            }
          }
        ]
      },
      {
        "name": "cache",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!cache_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Caches the given method."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function cache(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!MethodDecorator_type"
              },
              "text": "MethodDecorator"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "compound",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!compound_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function compound<T>(orderings: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "convertBackward",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!convertBackward_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function convertBackward<F, T>(converter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<T, F>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!OperatorFunction_interface"
              },
              "text": "OperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<F, T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "convertForward",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!convertForward_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function convertForward<F, T>(converter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<F, T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!OperatorFunction_interface"
              },
              "text": "OperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<F, T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "countableIterable",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!countableIterable_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function countableIterable(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<number>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "createSheetsTable",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!createSheetsTable_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function createSheetsTable(raw: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!RawSheet_interface"
              },
              "text": "RawSheet"
            },
            {
              "docNodeType": "t",
              "text": ", fromRow: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", toRow: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", fromColumn: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", toColumn: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SheetsTable_type"
              },
              "text": "SheetsTable"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "debug",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!debug_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function debug<T>(...keys: "
            },
            {
              "docNodeType": "t",
              "text": "string[]"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!MonoTypeOperatorFunction_interface"
              },
              "text": "MonoTypeOperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "defineTable",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!defineTable_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function defineTable(sheetsTable: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SheetsTable_type"
              },
              "text": "SheetsTable"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Table_interface"
              },
              "text": "Table"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "diff",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!diff_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function diff<T>(oldIterable: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ", newIterable: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~DiffResult_interface"
              },
              "text": "DiffResult"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "diffArray",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!diffArray_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function diffArray<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!OperatorFunction_interface"
              },
              "text": "OperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<readonly T[], "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayDiff_type"
              },
              "text": "ArrayDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "diffMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!diffMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function diffMap<K, V>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!OperatorFunction_interface"
              },
              "text": "OperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "ReadonlyMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MapDiff_type"
              },
              "text": "MapDiff"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "diffSet",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!diffSet_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function diffSet<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "rxjs!OperatorFunction_interface"
              },
              "text": "OperatorFunction"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetDiff_type"
              },
              "text": "SetDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "filterByType",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!filterByType_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterByType<F, T extends "
            },
            {
              "docNodeType": "t",
              "text": "F"
            },
            {
              "docNodeType": "t",
              "text": ">(type: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-types!Type_class"
              },
              "text": "Type"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<F>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "filterDefined",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!filterDefined_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterDefined<T>(): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<T, undefined>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "filterNonNull",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!filterNonNull_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function filterNonNull<T>(): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<T, null>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "fromLowerCaseString",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!fromLowerCaseString_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Converts enum name (as lower case string) to the corresponding enum value."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "stringValue",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The string value to convert to enum value."
                }
              ]
            }
          },
          {
            "name": "enumSet",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The set of enum values.  "
                },
                {
                  "docNodeType": "t",
                  "text": " The enum value corresponding to the enum name."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function fromLowerCaseString<E>(stringValue: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": ", enumSet: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "E"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "E",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "fromNumberString",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!fromNumberString_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Converts enum number (as string) to the corresponding enum value."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "stringValue",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The number to convert to enum value."
                }
              ]
            }
          },
          {
            "name": "enumSet",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The set of enum values.  "
                },
                {
                  "docNodeType": "t",
                  "text": " The enum value corresponding to the enum number."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function fromNumberString<E>(stringValue: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": ", enumSet: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "E"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "E",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "fromSeed",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!fromSeed_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function fromSeed(seed: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!RandomSeed_interface"
              },
              "text": "RandomSeed"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<undefined>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "getAllValues",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!getAllValues_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Returns all values of the given enum."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "enumSet",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Enum whose values should be returned.  "
                },
                {
                  "docNodeType": "t",
                  "text": " Array of enum values."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function getAllValues<E>(enumSet: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "readonly E[]"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "E",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "getCellContent",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!getCellContent_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function getCellContent(coordinate: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Coordinate_interface"
              },
              "text": "Coordinate"
            },
            {
              "docNodeType": "t",
              "text": ", sheetData: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!GridData_interface"
              },
              "text": "GridData"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ExtendedValue_interface"
              },
              "text": "ExtendedValue"
            },
            {
              "docNodeType": "t",
              "text": " | null"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "getCellContentByRange",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!getCellContentByRange_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Given the range, return the values of the cells in the range."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function getCellContentByRange(start: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Coordinate_interface"
              },
              "text": "Coordinate"
            },
            {
              "docNodeType": "t",
              "text": ", end: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Coordinate_interface"
              },
              "text": "Coordinate"
            },
            {
              "docNodeType": "t",
              "text": ", sheetData: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!GridData_interface"
              },
              "text": "GridData"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ExtendedValue_interface"
              },
              "text": "ExtendedValue"
            },
            {
              "docNodeType": "t",
              "text": " | undefined>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "getValue",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!getValue_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Searchs for the value in the JSON at the given path."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "json",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The object to get the value of."
                }
              ]
            }
          },
          {
            "name": "path",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "c",
                  "code": "."
                },
                {
                  "docNodeType": "t",
                  "text": " separatedpath to the location of the value to obtain.  "
                },
                {
                  "docNodeType": "t",
                  "text": " The value at the given location, or undefined if none exists."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function getValue(json: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Json_interface"
              },
              "text": "Json"
            },
            {
              "docNodeType": "t",
              "text": ", path: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "integerConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!integerConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function integerConverter(round?: "
            },
            {
              "docNodeType": "t",
              "text": "boolean"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~IntegerConverter_class"
              },
              "text": "IntegerConverter"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "isOneOf",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!isOneOf_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Orders items matching the given list at the start of the list."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function isOneOf<T>(checkedSet: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "listConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!listConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function listConverter<T>(itemConverter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<T, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<T[], "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "mapArrayDiff",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!mapArrayDiff_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function mapArrayDiff<F, T>(mapFn: "
            },
            {
              "docNodeType": "t",
              "text": "(from: F) => T"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(obs: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayDiff_type"
              },
              "text": "ArrayDiff"
            },
            {
              "docNodeType": "t",
              "text": "<F>>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayDiff_type"
              },
              "text": "ArrayDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "F",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "mapConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!mapConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function mapConverter<K, V>(keyConverter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<K, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": ", valueConverter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<V, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "ReadonlyMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "mapNonNull",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!mapNonNull_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function mapNonNull<A, B>(fn: "
            },
            {
              "docNodeType": "t",
              "text": "(from: A) => B"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<A | null>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<B | null>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "A",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "B",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "natural",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!natural_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Natural ordering that pays attention to numerical values in the string."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function natural(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<string>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "normal",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!normal_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Ordering by comparators "
                },
                {
                  "docNodeType": "c",
                  "code": "<"
                },
                {
                  "docNodeType": "t",
                  "text": " and "
                },
                {
                  "docNodeType": "c",
                  "code": ">"
                },
                {
                  "docNodeType": "t",
                  "text": "."
                }
              ]
            },
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "For numbers, this is the natural ordering of the number. For strings, this is the alphabetical ordering. For booleans, this ordering treats "
                },
                {
                  "docNodeType": "c",
                  "code": "false"
                },
                {
                  "docNodeType": "t",
                  "text": " as smaller."
                }
              ]
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function normal<T>(): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "objectConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!objectConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function objectConverter<T extends "
            },
            {
              "docNodeType": "t",
              "text": "{}"
            },
            {
              "docNodeType": "t",
              "text": ">(spec: "
            },
            {
              "docNodeType": "t",
              "text": "{\n    [K in keyof T]: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<T[K], "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">;\n}"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ObjectConverter_class"
              },
              "text": "ObjectConverter"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "randomInt",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!randomInt_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Picks an integer from the given interval."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "from",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The start interval (inclusive)."
                }
              ]
            }
          },
          {
            "name": "to",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The end interval (exclusive).  "
                },
                {
                  "docNodeType": "t",
                  "text": " Integer picked randomly in the given interval."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function randomInt(from: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", to: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<number>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "randomItem",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!randomItem_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Picks an item randomly from the given list."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "values",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The list to pick the value from.  "
                },
                {
                  "docNodeType": "t",
                  "text": " A value from the given list."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function randomItem<T>(values: "
            },
            {
              "docNodeType": "t",
              "text": "readonly T[]"
            },
            {
              "docNodeType": "t",
              "text": ", rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "randomPickWeighted",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!randomPickWeighted_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function randomPickWeighted<T>(items: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<readonly [T, number]>"
            },
            {
              "docNodeType": "t",
              "text": ", rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<T | null>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "randomPickWeightedMultiple",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!randomPickWeightedMultiple_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function randomPickWeightedMultiple<T>(items: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<readonly [T, number]>"
            },
            {
              "docNodeType": "t",
              "text": ", count: "
            },
            {
              "docNodeType": "t",
              "text": "number"
            },
            {
              "docNodeType": "t",
              "text": ", rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<readonly T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "randomShortId",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!randomShortId_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Generates a random short ID."
                }
              ]
            },
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "A short ID is a 7 characters long ID. Each character is a case sensitive alphanumeric character."
                }
              ]
            },
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": " A randomly generated short ID."
                }
              ]
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function randomShortId(rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<string>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "reversed",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!reversed_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function reversed<T>(ordering: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "scanArray",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!scanArray_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function scanArray<T>(): "
            },
            {
              "docNodeType": "t",
              "text": "(obs: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayDiff_type"
              },
              "text": "ArrayDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!ReadonlyArray_interface"
              },
              "text": "ReadonlyArray"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "scanMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!scanMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function scanMap<K, V>(): "
            },
            {
              "docNodeType": "t",
              "text": "(obs: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MapDiff_type"
              },
              "text": "MapDiff"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "ReadonlyMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "scanSet",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!scanSet_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function scanSet<T>(): "
            },
            {
              "docNodeType": "t",
              "text": "(obs: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetDiff_type"
              },
              "text": "SetDiff"
            },
            {
              "docNodeType": "t",
              "text": "<T>>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "setConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!setConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function setConverter<T>(itemConverter: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<T, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Converter_interface"
              },
              "text": "Converter"
            },
            {
              "docNodeType": "t",
              "text": "<"
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Set"
              },
              "text": "ReadonlySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>, "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "setValue",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!setValue_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Sets the value of the given object at the given path."
                }
              ]
            },
            {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "For example:"
                }
              ]
            },
            {
              "docNodeType": "cb",
              "code": "import Jsons from './jsons';\n\nJsons.setValue(window, 'a.b.c', 123);\nexpect(window.a.b.c).to.equal(123);\n"
            },
            {
              "docNodeType": "p",
              "children": []
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "json",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The object to set the value of."
                }
              ]
            }
          },
          {
            "name": "path",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "c",
                  "code": "."
                },
                {
                  "docNodeType": "t",
                  "text": " separated path to the location of the value to set."
                }
              ]
            }
          },
          {
            "name": "value",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The value to set."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function setValue(json: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Json_interface"
              },
              "text": "Json"
            },
            {
              "docNodeType": "t",
              "text": ", path: "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": ", value: "
            },
            {
              "docNodeType": "t",
              "text": "unknown"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "void"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "shuffle",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!shuffle_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function shuffle<T>(items: "
            },
            {
              "docNodeType": "t",
              "text": "readonly T[]"
            },
            {
              "docNodeType": "t",
              "text": ", rng: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<unknown>"
            },
            {
              "docNodeType": "t",
              "text": ", getBaseWeight?: "
            },
            {
              "docNodeType": "t",
              "text": "(item: T) => number"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Random_class"
              },
              "text": "Random"
            },
            {
              "docNodeType": "t",
              "text": "<readonly T[]>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "stringMatchConverter",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!stringMatchConverter_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function stringMatchConverter<T extends "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": ">(acceptableValues: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Iterable"
              },
              "text": "Iterable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~StringMatchConverter_class"
              },
              "text": "StringMatchConverter"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "switchMapNonNull",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!switchMapNonNull_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function switchMapNonNull<A, B>(fn: "
            },
            {
              "docNodeType": "t",
              "text": "(input: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "!Exclude_type"
              },
              "text": "Exclude"
            },
            {
              "docNodeType": "t",
              "text": "<A, null>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<B>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "(source: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<A>) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<B | null>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "A",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "B",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "toLowerCaseString",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!toLowerCaseString_function(1)",
        "summary": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "Converts the given enum value to lower case version of its name."
            }
          ]
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [
          {
            "name": "enumValue",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The enum value to convert."
                }
              ]
            }
          },
          {
            "name": "enumSet",
            "description": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The set of enum values.  "
                },
                {
                  "docNodeType": "t",
                  "text": " The lower case version of the enum name that corresponds to the enum value."
                }
              ]
            }
          }
        ],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function toLowerCaseString(enumValue: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": ", enumSet: "
            },
            {
              "docNodeType": "t",
              "text": "any"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "t",
              "text": "string"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "typeBased",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!typeBased_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function typeBased<T extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "nabu!Serializable_type"
              },
              "text": "Serializable"
            },
            {
              "docNodeType": "t",
              "text": ">(type: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-types!Type_class"
              },
              "text": "Type"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~TypeBasedConverter_class"
              },
              "text": "TypeBasedConverter"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "usingResource",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!usingResource_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function usingResource<R, T>(resourceFactory: "
            },
            {
              "docNodeType": "t",
              "text": "() => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!~Resource_interface"
              },
              "text": "Resource"
            },
            {
              "docNodeType": "t",
              "text": "<R>"
            },
            {
              "docNodeType": "t",
              "text": ", observableFactory: "
            },
            {
              "docNodeType": "t",
              "text": "(resource: R) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
              },
              "text": "Observable"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "R",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      },
      {
        "name": "withMap",
        "entityType": "f",
        "examples": [],
        "ref": "gs-tools!withMap_function(1)",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare function withMap<T1, T2>(mapFn: "
            },
            {
              "docNodeType": "t",
              "text": "(input: T1) => T2"
            },
            {
              "docNodeType": "t",
              "text": ", ordering: "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T2>"
            },
            {
              "docNodeType": "t",
              "text": "): "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!Ordering_type"
              },
              "text": "Ordering"
            },
            {
              "docNodeType": "t",
              "text": "<T1>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T1",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "T2",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "isAbstract": false,
        "isGlobal": true,
        "isProtected": false,
        "overloads": []
      }
    ],
    "interfaces": [
      {
        "name": "CellData",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!CellData_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface CellData "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "effectiveValue",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!CellData#effectiveValue_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly effectiveValue?: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ExtendedValue_interface"
                  },
                  "text": "ExtendedValue"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "Color",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!Color_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface Color "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "getBlue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getBlue_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Blue component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getBlue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getChroma",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getChroma_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "The chroma of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getChroma(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getGreen",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getGreen_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Green component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getGreen(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getHue",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getHue_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Hue component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getHue(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getLightness",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getLightness_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Lightness component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getLightness(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getLuminance",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getLuminance_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Luminance of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getLuminance(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getRed",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getRed_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Red component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getRed(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "getSaturation",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Color#getSaturation_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Saturation component of the color."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getSaturation(): "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "callSignatures": []
      },
      {
        "name": "Coordinate",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!Coordinate_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface Coordinate "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "column",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Coordinate#column_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly column: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "row",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Coordinate#row_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly row: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "Disposable",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!Disposable_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface Disposable "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "dispose",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Disposable#dispose_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Dispose this object."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "dispose(): "
                },
                {
                  "docNodeType": "t",
                  "text": "void"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "isDisposed",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!Disposable#isDisposed_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": " True iff the object has been disposed."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "isDisposed(): "
                },
                {
                  "docNodeType": "t",
                  "text": "boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "callSignatures": []
      },
      {
        "name": "EditableStorage",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!EditableStorage_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface EditableStorage<T> extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ReadableStorage_interface"
              },
              "text": "ReadableStorage"
            },
            {
              "docNodeType": "t",
              "text": "<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "clear",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#clear_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "clear(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "delete",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#delete_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Deletes the object corresponding to the given ID."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [
              {
                "name": "id",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "ID of the object to delete."
                    }
                  ]
                }
              }
            ],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "delete(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "deleteAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#deleteAt_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Deletes the object at the given index."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "deleteAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "generateId",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#generateId_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Reserves a new ID in the storage."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "generateId(): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<string>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": " Observable that emits new IDs. The IDs emitted are guaranteed to be unique at the time of emission."
                }
              ]
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "insertAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#insertAt_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Inserts the object at the given index."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "insertAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "update",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#update_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Updates the given object. If it doesn't exist, add the object."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [
              {
                "name": "id",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "ID of the object to update."
                    }
                  ]
                }
              },
              {
                "name": "instance",
                "description": {
                  "docNodeType": "p",
                  "children": [
                    {
                      "docNodeType": "t",
                      "text": "Object to update."
                    }
                  ]
                }
              }
            ],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "update(id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          },
          {
            "name": "updateAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!EditableStorage#updateAt_member(1)",
            "summary": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "Sets the object at the given index."
                }
              ]
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "updateAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ", id: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ", instance: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://rxjs-dev.firebaseapp.com/guide/observable"
                  },
                  "text": "Observable"
                },
                {
                  "docNodeType": "t",
                  "text": "<unknown>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "callSignatures": []
      },
      {
        "name": "ExtendedValue",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!ExtendedValue_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface ExtendedValue "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "boolValue",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ExtendedValue#boolValue_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly boolValue?: "
                },
                {
                  "docNodeType": "t",
                  "text": "boolean"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "numberValue",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ExtendedValue#numberValue_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly numberValue?: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "stringValue",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ExtendedValue#stringValue_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly stringValue?: "
                },
                {
                  "docNodeType": "t",
                  "text": "string"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "GridData",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!GridData_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface GridData "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "rowData",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!GridData#rowData_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly rowData?: "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!RowData_interface"
                  },
                  "text": "RowData"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "GridRange",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!GridRange_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface GridRange "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "endColumnIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!GridRange#endColumnIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly endColumnIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "endRowIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!GridRange#endRowIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly endRowIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "startColumnIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!GridRange#startColumnIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly startColumnIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "startRowIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!GridRange#startRowIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly startRowIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "MapDelete",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!MapDelete_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface MapDelete<K> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "key",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapDelete#key_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapDelete#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'delete'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "MapInit",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!MapInit_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface MapInit<K, V> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapInit#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'init'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapInit#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "value: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Map"
                  },
                  "text": "ReadonlyMap"
                },
                {
                  "docNodeType": "t",
                  "text": "<K, V>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "MapSet",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!MapSet_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface MapSet<K, V> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "key",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapSet#key_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "key: "
                },
                {
                  "docNodeType": "t",
                  "text": "K"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapSet#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'set'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MapSet#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "value: "
                },
                {
                  "docNodeType": "t",
                  "text": "V"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "Merge",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!Merge_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface Merge "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "endColumnIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Merge#endColumnIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly endColumnIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "endRowIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Merge#endRowIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly endRowIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "startColumnIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Merge#startColumnIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly startColumnIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "startRowIndex",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!Merge#startRowIndex_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly startRowIndex: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "MultiCell",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!MultiCell_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface MultiCell "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "isSingle",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MultiCell#isSingle_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly isSingle: "
                },
                {
                  "docNodeType": "t",
                  "text": "false"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!MultiCell#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly value: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!SheetsTable_type"
                  },
                  "text": "SheetsTable"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "RandomSeed",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!RandomSeed_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface RandomSeed "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [],
        "methods": [
          {
            "name": "next",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!RandomSeed#next_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "next(): "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly [number, "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!RandomSeed_interface"
                  },
                  "text": "RandomSeed"
                },
                {
                  "docNodeType": "t",
                  "text": "]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "callSignatures": []
      },
      {
        "name": "RawSheet",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!RawSheet_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface RawSheet "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "data",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!RawSheet#data_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly data: "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!GridData_interface"
                  },
                  "text": "GridData"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "merges",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!RawSheet#merges_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly merges?: "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!Merge_interface"
                  },
                  "text": "Merge"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "ReadonlyOrderedMap",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!ReadonlyOrderedMap_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface ReadonlyOrderedMap<K, V> extends "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": false,
                "link": "https://developer.mozilla.org/en-US/search?q=Map"
              },
              "text": "ReadonlyMap"
            },
            {
              "docNodeType": "t",
              "text": "<K, V> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "size",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!ReadonlyOrderedMap#size_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly size: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [
          {
            "name": "getAt",
            "entityType": "f",
            "examples": [],
            "ref": "gs-tools!ReadonlyOrderedMap#getAt_member(1)",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "getAt(index: "
                },
                {
                  "docNodeType": "t",
                  "text": "number"
                },
                {
                  "docNodeType": "t",
                  "text": "): "
                },
                {
                  "docNodeType": "t",
                  "text": "[K, V] | undefined"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isAbstract": false,
            "isGlobal": false,
            "isProtected": false,
            "overloads": []
          }
        ],
        "callSignatures": []
      },
      {
        "name": "RowData",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!RowData_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface RowData "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "values",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!RowData#values_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly values?: "
                },
                {
                  "docNodeType": "t",
                  "text": "readonly "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!CellData_interface"
                  },
                  "text": "CellData"
                },
                {
                  "docNodeType": "t",
                  "text": "[]"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "SetAdd",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!SetAdd_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface SetAdd<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetAdd#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'add'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetAdd#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "value: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "SetDelete",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!SetDelete_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface SetDelete<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetDelete#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'delete'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetDelete#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "value: "
                },
                {
                  "docNodeType": "t",
                  "text": "T"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "SetInit",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!SetInit_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface SetInit<T> "
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "type",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetInit#type_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "type: "
                },
                {
                  "docNodeType": "t",
                  "text": "'init'"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SetInit#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "value: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": false,
                    "link": "https://developer.mozilla.org/en-US/search?q=Set"
                  },
                  "text": "Set"
                },
                {
                  "docNodeType": "t",
                  "text": "<T>"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      },
      {
        "name": "SingleCell",
        "entityType": "i",
        "examples": [],
        "ref": "gs-tools!SingleCell_interface",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export interface SingleCell "
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        },
        "fields": [
          {
            "name": "isSingle",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SingleCell#isSingle_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly isSingle: "
                },
                {
                  "docNodeType": "t",
                  "text": "true"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          },
          {
            "name": "value",
            "entityType": "co",
            "examples": [],
            "ref": "gs-tools!SingleCell#value_member",
            "summary": {
              "docNodeType": "e"
            },
            "remarks": {
              "docNodeType": "e"
            },
            "hidden": false,
            "module": "",
            "args": [],
            "excerpt": {
              "docNodeType": "p",
              "children": [
                {
                  "docNodeType": "t",
                  "text": "readonly value: "
                },
                {
                  "docNodeType": "li",
                  "link": {
                    "isCode": true,
                    "link": "gs-tools!ExtendedValue_interface"
                  },
                  "text": "ExtendedValue"
                },
                {
                  "docNodeType": "t",
                  "text": ";"
                }
              ]
            },
            "typeParams": [],
            "returns": {
              "docNodeType": "e"
            },
            "isGlobal": false,
            "isProtected": false
          }
        ],
        "methods": [],
        "callSignatures": []
      }
    ],
    "typedefs": [
      {
        "name": "ArrayDiff",
        "entityType": "t",
        "examples": [],
        "ref": "gs-tools!ArrayDiff_type",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare type ArrayDiff<T> = "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayInit_interface"
              },
              "text": "ArrayInit"
            },
            {
              "docNodeType": "t",
              "text": "<T> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayInsert_interface"
              },
              "text": "ArrayInsert"
            },
            {
              "docNodeType": "t",
              "text": "<T> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArrayDelete_interface"
              },
              "text": "ArrayDelete"
            },
            {
              "docNodeType": "t",
              "text": "<T> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!ArraySet_interface"
              },
              "text": "ArraySet"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        }
      },
      {
        "name": "Cell",
        "entityType": "t",
        "examples": [],
        "ref": "gs-tools!Cell_type",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare type Cell = "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SingleCell_interface"
              },
              "text": "SingleCell"
            },
            {
              "docNodeType": "t",
              "text": " | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MultiCell_interface"
              },
              "text": "MultiCell"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [],
        "returns": {
          "docNodeType": "e"
        }
      },
      {
        "name": "MapDiff",
        "entityType": "t",
        "examples": [],
        "ref": "gs-tools!MapDiff_type",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare type MapDiff<K, V> = "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MapInit_interface"
              },
              "text": "MapInit"
            },
            {
              "docNodeType": "t",
              "text": "<K, V> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MapDelete_interface"
              },
              "text": "MapDelete"
            },
            {
              "docNodeType": "t",
              "text": "<K> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!MapSet_interface"
              },
              "text": "MapSet"
            },
            {
              "docNodeType": "t",
              "text": "<K, V>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "K",
            "description": {
              "docNodeType": "e"
            }
          },
          {
            "name": "V",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        }
      },
      {
        "name": "Ordering",
        "entityType": "t",
        "examples": [],
        "ref": "gs-tools!Ordering_type",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare type Ordering<T> = "
            },
            {
              "docNodeType": "t",
              "text": "(item1: T, item2: T) => "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!CompareResult_type"
              },
              "text": "CompareResult"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        }
      },
      {
        "name": "SetDiff",
        "entityType": "t",
        "examples": [],
        "ref": "gs-tools!SetDiff_type",
        "summary": {
          "docNodeType": "e"
        },
        "remarks": {
          "docNodeType": "e"
        },
        "hidden": false,
        "module": "",
        "args": [],
        "excerpt": {
          "docNodeType": "p",
          "children": [
            {
              "docNodeType": "t",
              "text": "export declare type SetDiff<T> = "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetInit_interface"
              },
              "text": "SetInit"
            },
            {
              "docNodeType": "t",
              "text": "<T> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetDelete_interface"
              },
              "text": "SetDelete"
            },
            {
              "docNodeType": "t",
              "text": "<T> | "
            },
            {
              "docNodeType": "li",
              "link": {
                "isCode": true,
                "link": "gs-tools!SetAdd_interface"
              },
              "text": "SetAdd"
            },
            {
              "docNodeType": "t",
              "text": "<T>"
            },
            {
              "docNodeType": "t",
              "text": ";"
            }
          ]
        },
        "typeParams": [
          {
            "name": "T",
            "description": {
              "docNodeType": "e"
            }
          }
        ],
        "returns": {
          "docNodeType": "e"
        }
      }
    ]
  },
  "config": {
    "baseColor": "GREEN",
    "accentColor": "PINK",
    "darkMode": true
  },
  "icon": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   height=\"100\"\n   width=\"100\"\n   inkscape:version=\"1.0 (4035a4f, 2020-05-01)\"\n   sodipodi:docname=\"icon.svg\"\n   id=\"svg6413\"\n   version=\"1.1\"\n   y=\"0px\"\n   x=\"0px\"\n   viewBox=\"0 0 100 100\"\n   data-name=\"Layer 1\">\n  <metadata\n     id=\"metadata6419\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title>118all</dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs6417\" />\n  <sodipodi:namedview\n     inkscape:current-layer=\"svg6413\"\n     inkscape:window-maximized=\"0\"\n     inkscape:window-y=\"26\"\n     inkscape:window-x=\"0\"\n     inkscape:cy=\"64.370748\"\n     inkscape:cx=\"8.2482998\"\n     inkscape:zoom=\"5.88\"\n     showgrid=\"false\"\n     id=\"namedview6415\"\n     inkscape:window-height=\"1024\"\n     inkscape:window-width=\"1680\"\n     inkscape:pageshadow=\"2\"\n     inkscape:pageopacity=\"0\"\n     guidetolerance=\"10\"\n     gridtolerance=\"10\"\n     objecttolerance=\"10\"\n     borderopacity=\"1\"\n     bordercolor=\"#666666\"\n     pagecolor=\"#ffffff\"\n     inkscape:document-rotation=\"0\" />\n  <title\n     id=\"title6397\">118all</title>\n  <path\n     style=\"stroke-width:1.11985\"\n     d=\"m 38.969502,62.574694 -5.65523,5.644032 -5.644031,-5.644032 -4.748153,4.748154 5.644031,5.655229 -5.644031,5.644032 4.748153,4.748153 5.644031,-5.644031 5.65523,5.644031 4.748153,-4.748153 -5.644031,-5.644032 5.644031,-5.655229 z m 11.53443,7.03264 h 26.484392 v 6.719085 H 50.503932 Z M 32.160829,46.191326 27.558256,42.462234 23.325233,47.691921 33.000715,55.519655 46.416488,39.92018 41.321182,35.541576 Z m 18.903027,-2.978797 h 26.484392 v 6.719085 H 51.063856 Z M 90.941624,6.7055042 h -30.32547 a 11.791994,11.791994 0 0 0 -21.277102,0 H 9.058376 V 100 H 90.941624 Z M 44.467953,13.424589 45.039075,10.77055 a 5.0841075,5.0841075 0 0 1 9.933048,0 l 0.571122,2.654039 h 6.506314 v 6.215153 H 37.961639 V 13.424589 Z M 84.222539,93.292111 H 15.777461 V 13.424589 h 15.465094 v 12.934238 h 37.51489 V 13.424589 h 15.465094 z\"\n     id=\"foreground\" />\n</svg>\n",
  "name": "gs-tools"
}